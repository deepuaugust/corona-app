{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authInterceptor.service.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/category/category.component.css","webpack:///./src/app/components/category/category.component.html","webpack:///./src/app/components/category/category.component.ts","webpack:///./src/app/components/category/create-category/create-category.component.css","webpack:///./src/app/components/category/create-category/create-category.component.html","webpack:///./src/app/components/category/create-category/create-category.component.ts","webpack:///./src/app/components/cell_renderer/requestCellRenderer/cell_renderer.component.css","webpack:///./src/app/components/cell_renderer/requestCellRenderer/cell_renderer.component.html","webpack:///./src/app/components/cell_renderer/requestCellRenderer/cell_renderer.component.ts","webpack:///./src/app/components/cell_renderer/userCellRenderer/cell_renderer.component.css","webpack:///./src/app/components/cell_renderer/userCellRenderer/cell_renderer.component.html","webpack:///./src/app/components/cell_renderer/userCellRenderer/cell_renderer.component.ts","webpack:///./src/app/components/excelImport/excelImport.component.css","webpack:///./src/app/components/excelImport/excelImport.component.html","webpack:///./src/app/components/excelImport/excelImport.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/requests/request-create/medical/request-create.component.css","webpack:///./src/app/components/requests/request-create/medical/request-create.component.html","webpack:///./src/app/components/requests/request-create/medical/request-create.component.ts","webpack:///./src/app/components/requests/request-create/nonmedical/request-create.component.css","webpack:///./src/app/components/requests/request-create/nonmedical/request-create.component.html","webpack:///./src/app/components/requests/request-create/nonmedical/request-create.component.ts","webpack:///./src/app/components/requests/request-create/request-create.component.css","webpack:///./src/app/components/requests/request-create/request-create.component.html","webpack:///./src/app/components/requests/request-create/request-create.component.ts","webpack:///./src/app/components/requests/request-home/request-home.component.css","webpack:///./src/app/components/requests/request-home/request-home.component.html","webpack:///./src/app/components/requests/request-home/request-home.component.ts","webpack:///./src/app/components/requests/request-interact/request-interact.component.css","webpack:///./src/app/components/requests/request-interact/request-interact.component.html","webpack:///./src/app/components/requests/request-interact/request-interact.component.ts","webpack:///./src/app/components/requests/requests-medical/requests-medical.component.css","webpack:///./src/app/components/requests/requests-medical/requests-medical.component.html","webpack:///./src/app/components/requests/requests-medical/requests-medical.component.ts","webpack:///./src/app/components/requests/requests-nonmedical/requests-nonmedical.component.css","webpack:///./src/app/components/requests/requests-nonmedical/requests-nonmedical.component.html","webpack:///./src/app/components/requests/requests-nonmedical/requests-nonmedical.component.ts","webpack:///./src/app/components/roles/create-roles/create-roles.component.css","webpack:///./src/app/components/roles/create-roles/create-roles.component.html","webpack:///./src/app/components/roles/create-roles/create-roles.component.ts","webpack:///./src/app/components/roles/roles.component.css","webpack:///./src/app/components/roles/roles.component.html","webpack:///./src/app/components/roles/roles.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/config/index.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/services/medicalRequest.service.ts","webpack:///./src/app/services/request.service.ts","webpack:///./src/app/services/role.service.ts","webpack:///./src/app/services/toaster.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/assets/styles/rotating-card.css","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* The side navigation menu */\\n.sidenav {\\n    height: 100%; /* 100% Full-height */\\n    width: 0; /* 0 width - change this with JavaScript */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Stay on top */\\n    top: 0; /* Stay at the top */\\n    left: 0;\\n    background-color: #111; /* Black*/\\n    overflow-x: hidden; /* Disable horizontal scroll */\\n    padding-top: 60px; /* Place content 60px from the top */\\n    transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */\\n  }\\n/* The navigation menu links */\\n.sidenav a {\\n    padding: 8px 8px 8px 32px;\\n    text-decoration: none;\\n    font-size: 25px;\\n    color: white;\\n    display: block;\\n    transition: 0.3s;\\n    cursor: pointer;\\n  }\\n/* When you mouse over the navigation links, change their color */\\n.sidenav a:hover {\\n    color: #f1f1f1;\\n  }\\n/* Position and style the close button (top right corner) */\\n.sidenav .closebtn {\\n    position: absolute;\\n    top: 0;\\n    right: 25px;\\n    font-size: 36px;\\n    margin-left: 50px;\\n  }\\n/* Style page content - use this if you want to push the page content to the right when you open the side navigation */\\n#maindiv {\\n    transition: margin-left .5s;\\n    padding: 20px;\\n    margin-top: 20px;\\n  }\\n.menu {\\n    width: 35px;\\n    height: 5px;\\n    background-color: rgb(255, 241, 241);\\n    margin: 3px 0;\\n    cursor: pointer;\\n  }\\n.menu_icon{\\n      position: absolute;\\n      top: 5px;\\n      left: 5px;\\n      cursor: pointer;\\n  }\\n/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */\\n@media screen and (max-height: 450px) {\\n    .sidenav {padding-top: 15px;}\\n    .sidenav a {font-size: 18px;}\\n  }\"","module.exports = \"<div id=\\\"mySidenav\\\" class=\\\"sidenav\\\">\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"closebtn\\\" (click)=\\\"closeNav()\\\">&times;</a>\\n  <a (click)=\\\"goToHome()\\\">Home</a>\\n  <a (click)=\\\"goToRequestHome()\\\">Home</a>\\n  <a (click)=\\\"logout()\\\">Logout</a>\\n</div>\\n\\n<!-- Use any element to open the sidenav -->\\n<span (click)=\\\"openNav()\\\" class=\\\"menu_icon\\\" id=\\\"menu_id\\\">\\n  <div class=\\\"menu\\\"></div>\\n  <div class=\\\"menu\\\"></div>\\n  <div class=\\\"menu\\\"></div\\n></span>\\n<div class=\\\"\\\" id=\\\"maindiv\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"./services/user.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  constructor(private _user: UserService, private route: Router) {}\n\n  openNav() {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n  }\n\n  /* Set the width of the side navigation to 0 and the left margin of the page content to 0, and the background color of body to white */\n  closeNav() {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  }\n\n  logout() {\n    this.closeNav();\n    this._user.logout();\n  }\n\n  goToHome() {\n    this.closeNav();\n    this.route.navigate([\"home\"]);\n  }\n\n  goToRequestHome() {\n    this.closeNav();\n    this.route.navigate([\"requests/home\"]);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { AgGridModule } from \"ag-grid-angular\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { UserComponent } from \"./components/user/user.component\";\nimport { AdminComponent } from \"./components/admin/admin.component\";\nimport { CategoryComponent } from \"./components/category/category.component\";\nimport { CreateCategoryComponent } from \"./components/category/create-category/create-category.component\";\nimport { RolesComponent } from \"./components/roles/roles.component\";\nimport { CreateRolesComponent } from \"./components/roles/create-roles/create-roles.component\";\nimport { RequestsMedicalComponent } from \"./components/requests/requests-medical/requests-medical.component\";\nimport { RequestCreateComponent } from \"./components/requests/request-create/request-create.component\";\nimport { ToasterService } from \"./services/toaster.service\";\nimport { UserService } from \"./services/user.service\";\nimport { CategoryService } from \"./services/category.service\";\nimport { RolesService } from \"./services/role.service\";\nimport { RequestService } from \"./services/request.service\";\nimport { MedicalRequestService } from \"./services/medicalRequest.service\";\nimport { AuthInterceptorService } from \"./authInterceptor.service\";\nimport { RequestCellRendererComponent } from \"./components/cell_renderer/requestCellRenderer/cell_renderer.component\";\nimport { UserCellRendererComponent } from \"./components/cell_renderer/userCellRenderer/cell_renderer.component\";\nimport { RequestInteractComponent } from \"./components/requests/request-interact/request-interact.component\";\nimport { ExcelImport } from \"./components/excelImport/excelImport.component\";\nimport { RequestHomeComponent } from \"./components/requests/request-home/request-home.component\";\nimport { RequestsNonMedicalComponent } from \"./components/requests/requests-nonmedical/requests-nonmedical.component\";\nimport { RequestCreateMedicalComponent } from \"./components/requests/request-create/medical/request-create.component\";\nimport { RequestCreateNonMedicalComponent } from \"./components/requests/request-create/nonmedical/request-create.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"home/register\", component: RegisterComponent },\n  { path: \"home\", component: AdminComponent },\n  { path: \"user\", component: UserComponent },\n  { path: \"user/edit/:id\", component: RegisterComponent },\n  { path: \"category\", component: CategoryComponent },\n  { path: \"category/create\", component: CreateCategoryComponent },\n  { path: \"roles\", component: RolesComponent },\n  { path: \"roles/create\", component: CreateRolesComponent },\n  { path: \"requests/medical\", component: RequestsMedicalComponent },\n  { path: \"requests/non-medical\", component: RequestsNonMedicalComponent },\n  { path: \"requests/home\", component: RequestHomeComponent },\n  { path: \"requests/create/medical\", component: RequestCreateMedicalComponent },\n  {\n    path: \"requests/create/nonmedical\",\n    component: RequestCreateNonMedicalComponent,\n  },\n  {\n    path: \"requests/edit/medical/:id\",\n    component: RequestCreateMedicalComponent,\n  },\n  {\n    path: \"requests/edit/nonmedical/:id\",\n    component: RequestCreateNonMedicalComponent,\n  },\n  { path: \"requests/interact/:id\", component: RequestInteractComponent },\n  { path: \"requests/import\", component: ExcelImport },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserComponent,\n    AdminComponent,\n    CategoryComponent,\n    CreateCategoryComponent,\n    RolesComponent,\n    CreateRolesComponent,\n    RequestsMedicalComponent,\n    RequestCreateComponent,\n    RequestCellRendererComponent,\n    UserCellRendererComponent,\n    RequestInteractComponent,\n    ExcelImport,\n    RequestHomeComponent,\n    RequestsNonMedicalComponent,\n    RequestCreateMedicalComponent,\n    RequestCreateNonMedicalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AgGridModule.withComponents([]),\n  ],\n  entryComponents: [RequestCellRendererComponent, UserCellRendererComponent],\n  providers: [\n    UserService,\n    CategoryService,\n    RolesService,\n    RequestService,\n    ToasterService,\n    MedicalRequestService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable, Injector } from '@angular/core'\nimport { HttpInterceptor } from '@angular/common/http'\nimport { UserService } from './services/user.service'\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor{\n    \n    constructor(private injector: Injector) {}\n\n    intercept(req, next) {\n        var auth = this.injector.get(UserService)\n        var authRequest = req.clone({\n            headers: req.headers.set('Authorization', auth.token)\n        })\n        return next.handle(authRequest)\n    }\n}","module.exports = \".maindiv {\\n  position: absolute;\\n  top: 50%;\\n  right: 50%;\\n  -webkit-transform: translate(50%, -50%);\\n          transform: translate(50%, -50%);\\n}\\n\\n.heading {\\n  font-weight: 700;\\n  font-size: 30px;\\n  text-align: center;\\n}\\n\\nbutton {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n  }\\n\\nbutton:hover {\\n    opacity: 0.8;\\n  }\\n\\n.imgtxt {\\n    text-align: center;\\n    font-weight: 700;\\n    font-size: 20px;\\n    margin-top: 30px;\\n  }\\n\\n.imgdiv {\\n    cursor: pointer;\\n  }\"","module.exports = \"<div class=\\\"maindiv col-md-12\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div\\n            class=\\\"col-md-3 imgdiv\\\"\\n            routerLink=\\\"/user\\\"\\n            *ngIf=\\\"user.type == 'admin' || user.type == 'superAdmin'\\\"\\n          >\\n            <div class=\\\"card-container\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"front\\\">\\n                  <div class=\\\"cover\\\">\\n                    <img src=\\\"../../../assets/images/cardbg.jpg\\\" />\\n                  </div>\\n                  <div class=\\\"user\\\">\\n                    <img\\n                      class=\\\"img-circle\\\"\\n                      src=\\\"../../../assets/images/user.png\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h3 class=\\\"name\\\">Users</h3>\\n                      <p class=\\\"profession\\\"></p>\\n\\n                      <p class=\\\"text-center\\\">\\n                        The list of registered users depicting their\\n                        corresponding categories and roles can be viewed. A new\\n                        user can be registered based on availability.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"footer\\\"></div>\\n                  </div>\\n                </div>\\n                <!-- end front panel -->\\n                <div class=\\\"back\\\">\\n                  <div class=\\\"header\\\">\\n                    <h5 class=\\\"motto\\\">\\n                      \\\"Clean your hands often. Use soap and water, or an\\n                      alcohol-based hand rub.\\\"\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h4 class=\\\"text-center\\\">Brief Overview</h4>\\n                      <p class=\\\"text-center\\\">\\n                        The below depicts the total count of users registered\\n                        within the application.\\n                      </p>\\n\\n                      <div class=\\\"stats-container\\\">\\n                        <div class=\\\"stats\\\">\\n                          <h4></h4>\\n                          <p></p>\\n                        </div>\\n                        <div class=\\\"stats\\\" style=\\\"width:100%\\\">\\n                          <h4>{{ userSummary }}</h4>\\n                          <p>\\n                            {{ userType }}\\n                          </p>\\n                        </div>\\n                        <div class=\\\"stats\\\">\\n                          <h4></h4>\\n                          <p></p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"footer\\\"></div>\\n                </div>\\n                <!-- end back panel -->\\n              </div>\\n              <!-- end card -->\\n            </div>\\n            <!-- end card-container -->\\n          </div>\\n          <div\\n            class=\\\"col-md-3 imgdiv\\\"\\n            routerLink=\\\"/category\\\"\\n            *ngIf=\\\"user.type == 'admin' || user.type == 'superAdmin'\\\"\\n          >\\n            <div class=\\\"card-container\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"front\\\">\\n                  <div class=\\\"cover\\\">\\n                    <img src=\\\"../../../assets/images/cardbg.jpg\\\" />\\n                  </div>\\n                  <div class=\\\"user\\\">\\n                    <img\\n                      class=\\\"img-circle\\\"\\n                      src=\\\"../../../assets/images/category.png\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h3 class=\\\"name\\\">Categories</h3>\\n                      <p class=\\\"profession\\\"></p>\\n\\n                      <p class=\\\"text-center\\\">\\n                        All the categories within the system can be viewed. A\\n                        new category can be created based on the incoming\\n                        request if not already available.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"footer\\\"></div>\\n                  </div>\\n                </div>\\n                <!-- end front panel -->\\n                <div class=\\\"back\\\">\\n                  <div class=\\\"header\\\">\\n                    <h5 class=\\\"motto\\\">\\n                      \\\"Maintain a safe distance from anyone who is coughing or\\n                      sneezing.\\\"\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h4 class=\\\"text-center\\\">Brief Overview</h4>\\n                      <p class=\\\"text-center\\\">\\n                        The below depicts the total number of categories for\\n                        which services are being provided.\\n                      </p>\\n\\n                      <div class=\\\"stats-container\\\">\\n                        <div class=\\\"stats\\\">\\n                          <h4></h4>\\n                          <p></p>\\n                        </div>\\n\\n                        <div class=\\\"stats\\\">\\n                          <h4>{{ categorySummary }}</h4>\\n                          <p>\\n                            Categories\\n                          </p>\\n                        </div>\\n                        <div class=\\\"stats\\\">\\n                          <h4></h4>\\n                          <p></p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"footer\\\"></div>\\n                </div>\\n                <!-- end back panel -->\\n              </div>\\n              <!-- end card -->\\n            </div>\\n            <!-- end card-container -->\\n          </div>\\n          <div\\n            class=\\\"col-md-3 imgdiv\\\"\\n            routerLink=\\\"/roles\\\"\\n            *ngIf=\\\"user.type == 'admin' || user.type == 'superAdmin'\\\"\\n          >\\n            <div class=\\\"card-container\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"front\\\">\\n                  <div class=\\\"cover\\\">\\n                    <img src=\\\"../../../assets/images/cardbg.jpg\\\" />\\n                  </div>\\n                  <div class=\\\"user\\\">\\n                    <img\\n                      class=\\\"img-circle\\\"\\n                      src=\\\"../../../assets/images/role.png\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h3 class=\\\"name\\\">Roles</h3>\\n                      <p class=\\\"profession\\\"></p>\\n\\n                      <p class=\\\"text-center\\\">\\n                        All roles within the system can be viewed. A new role\\n                        can be created based on the incoming request if not\\n                        already available.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"footer\\\"></div>\\n                  </div>\\n                </div>\\n                <!-- end front panel -->\\n                <div class=\\\"back\\\">\\n                  <div class=\\\"header\\\">\\n                    <h5 class=\\\"motto\\\">\\n                      \\\"Cover your nose and mouth with your bent elbow or a\\n                      tissue when you cough or sneeze.\\\"\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h4 class=\\\"text-center\\\">Brief Overview</h4>\\n                      <p class=\\\"text-center\\\">\\n                        The below depicts the total number of roles which are\\n                        actively participating for resolving the requests\\n                        created.\\n                      </p>\\n\\n                      <div class=\\\"stats-container\\\">\\n                        <div class=\\\"stats\\\">\\n                          <h4></h4>\\n                          <p></p>\\n                        </div>\\n\\n                        <div class=\\\"stats\\\">\\n                          <h4>{{ roleSummary }}</h4>\\n                          <p>\\n                            Roles\\n                          </p>\\n                        </div>\\n                        <div class=\\\"stats\\\">\\n                          <h4></h4>\\n                          <p></p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"footer\\\"></div>\\n                </div>\\n                <!-- end back panel -->\\n              </div>\\n              <!-- end card -->\\n            </div>\\n            <!-- end card-container -->\\n          </div>\\n          <div class=\\\"col-md-3 imgdiv\\\" routerLink=\\\"/requests\\\" *ngIf=\\\"user.type\\\">\\n            <div class=\\\"card-container\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"front\\\">\\n                  <div class=\\\"cover\\\">\\n                    <img src=\\\"../../../assets/images/cardbg.jpg\\\" />\\n                  </div>\\n                  <div class=\\\"user\\\">\\n                    <img\\n                      class=\\\"img-circle\\\"\\n                      src=\\\"../../../assets/images/request.jpg\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h3 class=\\\"name\\\">Requests</h3>\\n                      <p class=\\\"profession\\\"></p>\\n\\n                      <p class=\\\"text-center\\\">\\n                        The complete set of requests can be viewed. A new\\n                        request can be regstered by mapping it to the\\n                        corresponding service provider.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"footer\\\"></div>\\n                  </div>\\n                </div>\\n                <!-- end front panel -->\\n                <div class=\\\"back\\\">\\n                  <div class=\\\"header\\\">\\n                    <h5 class=\\\"motto\\\">\\n                      \\\"Follow the directions of your local health authority.\\\"\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h4 class=\\\"text-center\\\">Brief Overview</h4>\\n                      <p class=\\\"text-center\\\">\\n                        The below depicts the total count of requests that have\\n                        been raised along with their corresponding statuses..\\n                      </p>\\n\\n                      <div class=\\\"stats-container\\\">\\n                        <div\\n                          class=\\\"stats\\\"\\n                          *ngFor=\\\"let summary of requestsSummary\\\"\\n                        >\\n                          <h4>{{ summary.count }}</h4>\\n                          <p>\\n                            {{ statuses[summary._id - 1] }}\\n                          </p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"footer\\\"></div>\\n                </div>\\n                <!-- end back panel -->\\n              </div>\\n              <!-- end card -->\\n            </div>\\n            <!-- end card-container -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ToasterService } from \"../../services/toaster.service\";\nimport { RequestService } from \"../../services/request.service\";\nimport { Router } from \"@angular/router\";\nimport utils from \"../../utils/utils.json\";\nimport { RolesService } from \"../../services/role.service\";\nimport { CategoryService } from \"../../services/category.service\";\nimport { UserService } from \"../../services/user.service\";\n\n@Component({\n  selector: \"app-admin\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\n    \"./admin.component.css\",\n    \"../../../assets/styles/rotating-card.css\",\n  ],\n})\nexport class AdminComponent implements OnInit {\n  statuses = utils.statuses.map((d) => d.label);\n  requestsSummary = [];\n  roleSummary = [];\n  categorySummary = [];\n  userSummary = [];\n\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  type = this.user.type === \"superAdmin\" ? \"admin\" : \"regular\";\n  userType =\n    this.user.type === \"superAdmin\" ? \"Admins\" : \"Volunteers/Service Providers\";\n\n  constructor(\n    private toaster: ToasterService,\n    private route: Router,\n    private _request: RequestService,\n    private _role: RolesService,\n    private _category: CategoryService,\n    private _user: UserService\n  ) {}\n\n  loadDahsboard() {\n    this._request.summary(this.user._id).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.requestsSummary = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n    this._role.summary().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.roleSummary = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n    this._category.summary().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.categorySummary = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n    this._user.summary(this.type).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.userSummary = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n\n  ngOnInit() {\n    if (this.user.type === undefined) {\n      this.toaster.showError(\"Authentication Failed. Please login again.\");\n      this.route.navigate([\"login\"]);\n      return;\n    }\n    this.loadDahsboard();\n  }\n\n  login() {}\n}\n","module.exports = \".btn {\\n  margin-top: 20px;\\n}\\n\\nbutton:hover {\\n  opacity: 0.8;\\n}\\n\\n.category {\\n  background-color: white;\\n  padding: 15px;\\n  border-radius: 10px;\\n  box-shadow: 2px 2px 2px 2px;\\n  margin-top: 20px;\\n  margin-bottom: 30px;\\n  border: 3px solid transparent;\\n  background-clip: padding-box;\\n  min-height: 100px;\\n}\\n\\n.buttondiv {\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 class=\\\"col-md-12\\\" style=\\\"text-align: center;color:white\\\">Available Categories</h2>\\n  <div class=\\\"col-md-12\\\">\\n    <ag-grid-angular\\n      style=\\\"height: 600px;\\\"\\n      class=\\\"ag-theme-alpine col-md-12\\\"\\n      [rowData]=\\\"rowData\\\"\\n      [columnDefs]=\\\"columnDefs\\\"\\n      [headerHeight]=\\\"50\\\"\\n      [rowHeight]=\\\"55\\\"\\n      [suppressMenuHide]=\\\"true\\\"\\n      (gridReady)=\\\"onGridReady($event)\\\"\\n    >\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"col-md-12 buttondiv\\\" *ngIf=\\\"user.type == 'admin'\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/category/create\\\">\\n      Create a new category\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ToasterService } from \"../../services/toaster.service\";\nimport { CategoryService } from \"src/app/services/category.service\";\n\n@Component({\n  selector: \"app-category\",\n  templateUrl: \"./category.component.html\",\n  styleUrls: [\"./category.component.css\"],\n})\nexport class CategoryComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  categories = [];\n  columnDefs = [];\n  rowData = [];\n  gridApi = [];\n  gridColumnApi = [];\n\n  constructor(\n    private _category: CategoryService,\n    private route: Router,\n    private toaster: ToasterService\n  ) {}\n\n  ngOnInit() {\n    this._category.list().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else {\n          this.categories = res.data;\n          this.columnDefs = [\n            {\n              headerName: \"Category\",\n              field: \"name\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n              sortable: true,\n              filter: true,\n            },\n            {\n              headerName: \"Description\",\n              field: \"description\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n          ];\n          this.rowData = this.categories;\n        }\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    params.api.sizeColumnsToFit();\n  }\n}\n","module.exports = \".main {\\n    width: 50%;\\n    box-shadow: 3px 3px 3px 3px;\\n    background-color: white;\\n    border-radius: 20px;\\n    padding: 40px;\\n    position: absolute;\\n    top: 50%;\\n    right: 50%;\\n    -webkit-transform: translate(50%, -50%);\\n            transform: translate(50%, -50%);\\n  }\\n  \\n  form {\\n    border: 3px solid #f1f1f1;\\n    padding: 20px;\\n    border-radius: 20px;\\n  }\\n  \\n  input[type=\\\"text\\\"],\\n  input[type=\\\"password\\\"] {\\n    padding: 12px 20px;\\n    margin-bottom: 20px;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    border-radius: 15px;\\n  }\\n  \\n  select {\\n      margin-bottom: 20px;\\n  }\\n  \\n  button {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n  }\\n  \\n  .disabled {\\n    background-color: lightgrey;\\n  }\\n  \\n  .container {\\n    padding: 16px;\\n  }\\n  \\n  .ng-valid[required],\\n  .ng-valid.required {\\n    border-left: 5px solid #42a948;\\n    /* green */\\n  }\\n  \\n  .ng-invalid:not(form) {\\n    border-left: 5px solid #a94442;\\n    /* red */\\n  }\\n  \\n  .buttondiv {\\n    text-align: center;\\n  }\\n\\n  \"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 style=\\\"text-align:center\\\">Create Category</h2>\\n  <form class=\\\"col-md-12\\\" #categoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"create(category)\\\">\\n    <div class=\\\"container col-md-12\\\">\\n      <label class=\\\"col-md-12\\\" for=\\\"category\\\"><b>Category</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"category.name\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Category\\\"\\n        name=\\\"categoryName\\\"\\n        required\\n        #categoryName=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"categoryName.valid || categoryName.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Category Name is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"psw\\\"><b>Description</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"category.description\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Description\\\"\\n        name=\\\"description\\\"\\n        #description=\\\"ngModel\\\"\\n      />\\n      <div class=\\\"col-md-12 buttondiv\\\">\\n      <button class=\\\"btn btn-success\\\" [ngClass]=\\\"{disabled:!categoryForm.form.valid}\\\" [disabled]=\\\"!categoryForm.form.valid\\\" type=\\\"submit\\\">\\n        Create Category\\n      </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ToasterService } from \"../../../services/toaster.service\";\nimport { CategoryService } from \"src/app/services/category.service\";\n\n@Component({\n  selector: \"app-create-category\",\n  templateUrl: \"./create-category.component.html\",\n  styleUrls: [\"./create-category.component.css\"],\n})\nexport class CreateCategoryComponent implements OnInit {\n  category = {};\n  constructor(\n    private _category: CategoryService,\n    private route: Router,\n    private toaster: ToasterService\n  ) {}\n  user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : \"\";\n\n  ngOnInit() {\n    if(this.user.type === undefined) { \n      this.toaster.showError(\"Authentication Failed. Please login again.\");\n      this.route.navigate(['login']);\n    }\n  }\n\n  create(data) {\n    this._category.create(data).subscribe(\n      (res) => {\n        if (res.message == \"success\") this.route.navigate([\"/category\"]);\n        else this.toaster.showError(res.message);\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n}\n","module.exports = \".btn {\\n    padding: 10px;\\n    margin-right: 10px;\\n    width: 70px;\\n    margin-top: 5px;\\n    margin-bottom: 5px;\\n}\"","module.exports = \"<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" *ngIf=\\\"readAccess&&medical\\\" routerLink=\\\"/requests/edit/medical/{{data._id}}\\\">Edit</button>\\n<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" *ngIf=\\\"readAccess&&!medical\\\" routerLink=\\\"/requests/edit/nonmedical/{{data._id}}\\\">Edit</button>\\n<!-- <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/requests/interact/{{data._id}}\\\">Interact</button> -->\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-cell_renderer\",\n  templateUrl: \"./cell_renderer.component.html\",\n  styleUrls: [\"./cell_renderer.component.css\"],\n})\nexport class RequestCellRendererComponent implements OnInit {\n  medical = true;\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  readAccess =\n    (this.user.role && this.user.role.requestReadAccess) ||\n    this.user.type === \"admin\";\n  data: any;\n  params: any;\n  constructor(private route: Router) {}\n\n  agInit(params) {\n    this.params = params;\n    console.log(this.params)\n    this.data = params.data;\n  }\n\n  ngOnInit() {\n    const { url } = this.route;\n    if (url.indexOf(\"non\") > -1) {\n      this.medical = false;\n    }\n    else this.medical = true;\n  }\n}\n","module.exports = \".btn {\\n    padding: 10px;\\n    margin-right: 10px;\\n    width: 70px;\\n    margin-top: 5px;\\n    margin-bottom: 5px;\\n}\"","module.exports = \"<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/user/edit/{{data._id}}\\\">Edit</button>\\n<button class=\\\"btn btn-primary\\\" type=\\\"button\\\">Enable</button>\\n<button class=\\\"btn btn-primary\\\" type=\\\"button\\\">Disable</button>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cell_renderer\",\n  templateUrl: \"./cell_renderer.component.html\",\n  styleUrls: [\"./cell_renderer.component.css\"],\n})\nexport class UserCellRendererComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  data: any;\n  params: any;\n  constructor() {}\n\n  agInit(params) {\n    this.params = params;\n    this.data = params.data;\n  }\n\n  ngOnInit() {}\n}\n","module.exports = \".main {\\n  text-align: center;\\n}\\n\\n.buttondiv {\\n  margin-top: 30px;\\n  text-align: center;\\n}\\n\\n.file-input {\\n  display: inline-block;\\n  margin-top: 50px;\\n  text-align: left;\\n  background: #fff;\\n  padding: 16px;\\n  width: 450px;\\n  position: relative;\\n  border-radius: 3px;\\n}\\n\\n.file-input > [type=\\\"file\\\"] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0;\\n  z-index: 10;\\n  cursor: pointer;\\n}\\n\\n.file-input > .button {\\n  display: inline-block;\\n  cursor: pointer;\\n  background: #eee;\\n  padding: 8px 16px;\\n  border-radius: 2px;\\n  margin-right: 8px;\\n}\\n\\n.file-input:hover > .button {\\n  background: dodgerblue;\\n  color: white;\\n}\\n\\n.file-input > .label {\\n  color: #333;\\n  white-space: nowrap;\\n  opacity: 0.3;\\n}\\n\\n.file-input.-chosen > .label {\\n  opacity: 1;\\n}\\n\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 class=\\\"col-md-12\\\" style=\\\"text-align: center; color: white;\\\">\\n    Import Data\\n  </h2>\\n\\n  <div class='file-input'>\\n    <input type='file' (change)=\\\"fileSelect($event)\\\">\\n    <span class='button'>Choose</span>\\n    <span class='label' data-js-label>No file selected</span>\\n  </div>\\n\\n  <div class=\\\"col-md-12 buttondiv\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadJson()\\\">\\n      Upload\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport * as XLSX from \"xlsx\";\nimport { RequestService } from \"../../services/request.service\";\nimport { MedicalRequestService } from \"../../services/medicalRequest.service\";\nimport { ToasterService } from \"src/app/services/toaster.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-excel-import\",\n  templateUrl: \"./excelImport.component.html\",\n  styleUrls: [\"./excelImport.component.css\"],\n})\nexport class ExcelImport implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  uploadData = [];\n  uploadType = \"\";\n\n  constructor(\n    private toaster: ToasterService,\n    private _request: RequestService,\n    private _mediacalRequest: MedicalRequestService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {}\n\n  onFileChange(ev) {\n    let workBook = null;\n    let jsonData = null;\n    const reader = new FileReader();\n    const file = ev.target.files[0];\n    reader.onload = (event) => {\n      const data = reader.result;\n      workBook = XLSX.read(data, { type: \"binary\" });\n      jsonData = workBook.SheetNames.reduce((initial, name) => {\n        const sheet = workBook.Sheets[name];\n        initial[name] = XLSX.utils.sheet_to_json(sheet);\n        return initial;\n      }, {});\n      //This is where the data is being displayed. dataString variable contains the json data.\n      const dataString = JSON.stringify(jsonData);\n      this.uploadData = JSON.parse(dataString);\n    };\n    reader.readAsBinaryString(file);\n  }\n\n  fileSelect(ev) {\n    var inputs = document.querySelectorAll(\".file-input\");\n\n    for (var i = 0, len = inputs.length; i < len; i++) {\n      this.customInput(inputs[i], ev);\n    }\n  }\n\n  customInput(el, ev) {\n    const fileInput = el.querySelector('[type=\"file\"]');\n    const label = el.querySelector(\"[data-js-label]\");\n\n    if (!fileInput.value) return;\n\n    var value = fileInput.value.replace(/^.*[\\\\\\/]/, \"\");\n    el.className += \" -chosen\";\n    label.innerText = value;\n\n    this.onFileChange(ev);\n  }\n\n  uploadJson() {\n    const label = document.querySelector(\"[data-js-label]\");\n    if (label.innerHTML == \"No file selected\")\n      this.toaster.showError(\"Please select a file\");\n\n    console.log(this.uploadData);\n    if (this.uploadData[\"Medical\"] !== undefined) {\n      this.uploadType = \"Medical\";\n      this.uploadType = \"Non-Medical\";\n      this._mediacalRequest\n        .upload({ createdBy: this.user._id, data: this.uploadData })\n        .subscribe(\n          (res) => {\n            if (res.data == null) this.toaster.showError(res.message);\n            else {\n              this.toaster.showSuccess(\"Upload successful\");\n              this.route.navigate([\"/requests/home\"]);\n            }\n          },\n          (error) => {\n            this.toaster.showError(error.error.message);\n            if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n          }\n        );\n    } else {\n      this.uploadType = \"Non-Medical\";\n      this._request\n        .upload({ createdBy: this.user._id, data: this.uploadData })\n        .subscribe(\n          (res) => {\n            if (res.data == null) this.toaster.showError(res.message);\n            else {\n              this.toaster.showSuccess(\"Upload successful\");\n              this.route.navigate([\"/requests/home\"]);\n            }\n          },\n          (error) => {\n            this.toaster.showError(error.error.message);\n            if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n          }\n        );\n    }\n\n    // this.toaster.showSuccess(\"Upload successful\");\n    // this.route.navigate(['/requests']);\n  }\n}\n","module.exports = \" .main{\\n   width: 50%;\\n   box-shadow: 3px 3px 3px 3px;\\n   background-color: white;\\n   border-radius: 20px;\\n   padding: 40px;\\n   position: absolute;\\n   top: 50%;\\n   right:50%;\\n   -webkit-transform: translate(50%,-50%);\\n           transform: translate(50%,-50%);\\n } \\n \\n form {\\n    border: 3px solid #f1f1f1;\\n    padding: 20px;\\n    border-radius: 20px;\\n  } \\n \\n input[type=text],\\n  input[type=password] {\\n    padding: 12px 20px;\\n    margin-bottom: 20px;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    border-radius: 15px;\\n  } \\n \\n button {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    border-radius: 5px;\\n  } \\n \\n .disabled {\\n    background-color: lightgrey;\\n  } \\n \\n .cancelbtn {\\n    width: auto;\\n    padding: 10px 18px;\\n    background-color: #f44336;\\n  } \\n \\n .imgcontainer {\\n    text-align: center;\\n    margin: 24px 0 12px 0;\\n  } \\n \\n img.avatar {\\n    width: 40%;\\n    border-radius: 50%;\\n  } \\n \\n .container {\\n    padding: 16px;\\n  } \\n \\n span.psw {\\n    float: right;\\n    padding-top: 16px;\\n  } \\n \\n .ng-valid[required],\\n  .ng-valid.required {\\n    border-left: 5px solid #42A948;\\n    /* green */\\n  } \\n \\n .ng-invalid:not(form) {\\n    border-left: 5px solid #a94442;\\n    /* red */\\n  }\"","module.exports = \"<body>\\n  <div class=\\\"main col-md-12\\\">\\n    <h2 style=\\\"text-align: center;\\\">Login</h2>\\n    <form class=\\\"col-md-12\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(user)\\\">\\n      <div class=\\\"container col-md-12\\\">\\n        <label class=\\\"col-md-12\\\" for=\\\"uname\\\"><b>Username</b></label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"user.userName\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Username\\\"\\n          name=\\\"userName\\\"\\n          required\\n          #userName=\\\"ngModel\\\"\\n        />\\n        <div\\n          [hidden]=\\\"userName.valid || userName.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Username is required\\n        </div>\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"psw\\\"><b>Password</b></label>\\n        <input\\n          type=\\\"password\\\"\\n          [(ngModel)]=\\\"user.password\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Password\\\"\\n          name=\\\"password\\\"\\n          required\\n          #password=\\\"ngModel\\\"\\n        />\\n        <div\\n          [hidden]=\\\"password.valid || password.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Password is required\\n        </div>\\n        <button class=\\\"col-md-12 btn btn-success\\\" [ngClass]=\\\"{disabled:!loginForm.form.valid}\\\" [disabled]=\\\"!loginForm.form.valid\\\" type=\\\"submit\\\">Login</button>\\n      </div>\\n    </form>\\n  </div>\\n</body>\\n\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ToasterService } from \"../../services/toaster.service\";\nimport { UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  user = {};\n\n  constructor(\n    private _user: UserService,\n    private route: Router,\n    private toaster: ToasterService\n  ) {}\n\n  ngOnInit() {\n    document.getElementById(\"menu_id\").style.display = \"none\";\n    this._user.logout();\n  }\n\n  goHome(){\n    alert('hasd');\n  }\n\n  login(data) {\n    localStorage.setItem(\"token\", \"\");\n    this._user.login(data).subscribe((res) => {\n      if (res.data == null) {\n        this.toaster.showError(res.msg);\n      } else {\n        const { data } = res;\n        const role = data.userDetails.type;\n        this._user.saveTokenUser(data.jwtToken, role, JSON.stringify(data.userDetails));\n        if (role == \"superAdmin\" || role == \"admin\") {\n          this.route.navigate([\"/home\"]);\n          document.getElementById('menu_id').style.display = \"block\";\n          document.getElementById('mySidenav').getElementsByTagName('a')[2].style.display = \"none\";\n          document.getElementById('mySidenav').getElementsByTagName('a')[1].style.display = \"block\";\n        } else {\n          this.route.navigate([\"/requests/home\"]);\n          document.getElementById('menu_id').style.display = \"block\";\n          document.getElementById('mySidenav').getElementsByTagName('a')[1].style.display = \"none\";\n          document.getElementById('mySidenav').getElementsByTagName('a')[2].style.display = \"block\";\n        }\n      }\n    });\n  }\n}\n","module.exports = \".main {\\n  width: 50%;\\n  box-shadow: 3px 3px 3px 3px;\\n  background-color: white;\\n  border-radius: 20px;\\n  padding: 40px;\\n  position: absolute;\\n  top: 50%;\\n  right: 50%;\\n  -webkit-transform: translate(50%, -50%);\\n          transform: translate(50%, -50%);\\n}\\n\\nform {\\n  border: 3px solid #f1f1f1;\\n  padding: 20px;\\n  border-radius: 20px;\\n}\\n\\ninput[type=\\\"text\\\"],\\ninput[type=\\\"password\\\"] {\\n  padding: 12px 20px;\\n  margin-bottom: 20px;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n  border-radius: 15px;\\n}\\n\\nselect {\\n    margin-bottom: 20px;\\n}\\n\\nbutton {\\n  background-color: #4caf50;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.disabled {\\n  background-color: lightgrey;\\n}\\n\\n.buttondiv{\\n  text-align: center;\\n}\\n\\n.container {\\n  padding: 16px;\\n}\\n\\nspan.psw {\\n  float: right;\\n  padding-top: 16px;\\n}\\n\\n.ng-valid[required],\\n.ng-valid.required {\\n  border-left: 5px solid #42a948;\\n  /* green */\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */\\n}\\n\\n/* Change styles for span and cancel button on extra small screens */\\n\\n@media screen and (max-width: 300px) {\\n  span.psw {\\n    display: block;\\n    float: none;\\n  }\\n  .cancelbtn {\\n    width: 100%;\\n  }\\n}\\n\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 style=\\\"text-align: center;\\\">\\n    {{ heading }} {{ loggedInUser.type === \\\"superAdmin\\\" ? \\\"Admin\\\" : \\\"User\\\" }}\\n  </h2>\\n\\n  <form class=\\\"col-md-12\\\" #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"signup(user)\\\">\\n    <div class=\\\"container col-md-12\\\">\\n      <label class=\\\"col-md-12\\\" for=\\\"fname\\\">\\n        <b>First Name</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"user.fName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter First name\\\"\\n        name=\\\"fName\\\"\\n        required\\n        #fName=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"fName.valid || fName.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        First name is required\\n      </div>\\n      <label class=\\\"col-md-12\\\" for=\\\"lname\\\">\\n        <b>Last Name</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"user.lName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Last name\\\"\\n        name=\\\"lName\\\"\\n        required\\n        #lName=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"lName.valid || lName.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Last name is required\\n      </div>\\n      <label class=\\\"col-md-12\\\" for=\\\"uname\\\">\\n        <b>Username</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"user.userName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Username\\\"\\n        name=\\\"userName\\\"\\n        required\\n        [readonly]=\\\"isEditMode\\\"\\n        #userName=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"userName.valid || userName.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Username is required\\n      </div>\\n      <div *ngIf=\\\"!isEditMode\\\">\\n        <label class=\\\"col-md-12\\\" for=\\\"psw\\\">\\n          <b>Password</b>\\n        </label>\\n        <input\\n          type=\\\"password\\\"\\n          [(ngModel)]=\\\"user.password\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Password\\\"\\n          name=\\\"password\\\"\\n          required\\n          #password=\\\"ngModel\\\"\\n        />\\n        <div\\n          [hidden]=\\\"password.valid || password.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Password is required\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"loggedInUser.type === 'admin'\\\">\\n        <label class=\\\"col-md-12\\\" for=\\\"category\\\">\\n          <b>Category</b>\\n        </label>\\n        <select\\n          [(ngModel)]=\\\"user.category\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Select Category\\\"\\n          name=\\\"category\\\"\\n          required\\n          #category=\\\"ngModel\\\"\\n          (ngModelChange)=\\\"onChange($event)\\\"\\n        >\\n          <option disabled>Select Category</option>\\n          <option\\n            *ngFor=\\\"let category of categories\\\"\\n            [ngValue]=\\\"category._id\\\"\\n            >{{ category.name }}</option\\n          >\\n        </select>\\n        <div\\n          [hidden]=\\\"category.valid || category.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Category is required\\n        </div>\\n        <label class=\\\"col-md-12\\\" for=\\\"category\\\">\\n          <b>Role</b>\\n        </label>\\n        <select\\n          [(ngModel)]=\\\"user.role\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Select Category\\\"\\n          name=\\\"role\\\"\\n          required\\n          #role=\\\"ngModel\\\"\\n        >\\n          <option disabled> Select Role</option>\\n          <option *ngFor=\\\"let role of roles\\\" [ngValue]=\\\"role._id\\\">{{\\n            role.name\\n          }}</option>\\n        </select>\\n        <div\\n          [hidden]=\\\"role.valid || role.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Role is required\\n        </div>\\n        <div class=\\\"custom-control custom-switch\\\">\\n          <input\\n            type=\\\"checkbox\\\"\\n            class=\\\"custom-control-input\\\"\\n            name=\\\"status\\\"\\n            [(ngModel)]=\\\"user.status\\\"\\n          />\\n          <label class=\\\"custom-control-label\\\" for=\\\"customSwitch1\\\">\\n            Enable / Disable user</label\\n          >\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12 buttondiv\\\">\\n        <button\\n          class=\\\"btn btn-success\\\"\\n          [ngClass]=\\\"{ disabled: !signupForm.form.valid }\\\"\\n          [disabled]=\\\"!signupForm.form.valid\\\"\\n          type=\\\"submit\\\"\\n        >\\n          Sign Up\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ToasterService } from \"../../services/toaster.service\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { CategoryService } from \"src/app/services/category.service\";\nimport { RolesService } from \"src/app/services/role.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"],\n})\nexport class RegisterComponent implements OnInit {\n  loggedInUser = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  heading = \"\";\n\n  // type = this.loggedInUser.type === \"admin\" ? \"regular\" : \"admin\";\n\n  type =\n    this.loggedInUser !== \"\"\n      ? this.loggedInUser.type === \"admin\"\n        ? \"regular\"\n        : \"admin\"\n      : \"\";\n  isEditMode = false;\n  user = { type: this.type, status: true };\n  roles = [];\n  categories = [];\n  private errorMessage: string;\n  constructor(\n    private route: Router,\n    private _route: ActivatedRoute,\n    private _user: UserService,\n    private _category: CategoryService,\n    private _roles: RolesService,\n    private toaster: ToasterService\n  ) {\n    const { url } = this.route;\n    if (url.indexOf(\"edit\") > -1) this.isEditMode = true;\n  }\n\n  loadCategories = () => {\n    this._category.list().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.categories = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n\n  onChange = (category) => {\n    this._roles.getByCategory(category).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.roles = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n\n  ngOnInit() {\n    this.loadCategories();\n    this.loadData();\n    this.heading = this.isEditMode ? \"Edit\" : \"Create\";\n  }\n\n  loadData() {\n    if (this.isEditMode) {\n      const id = this._route.snapshot.params[\"id\"];\n      this._user.getById(id).subscribe(\n        (res) => {\n          if (res.message == \"success\" && res.data[0]) {\n            const [user] = res.data;\n            this.user = user;\n            this.onChange(user.category);\n          } else this.toaster.showError(res.message);\n        },\n        (error) => {\n          this.toaster.showError(error.error.message);\n          if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n        }\n      );\n    }\n  }\n\n  signup(data) {\n    if (this.isEditMode) {\n      this._user.update(data).subscribe(\n        (data) => {\n          if (data.status == \"success\") {\n            this.toaster.showSuccess(\"User Updated successfully\");\n            this.route.navigate([\"/user\"]);\n          } else this.toaster.showError(data.message);\n        },\n        (error) => {\n          this.toaster.showError(error.error.message);\n        }\n      );\n    } else {\n      this._user.signup(data).subscribe(\n        (data) => {\n          if (data.status == \"success\") {\n            this.toaster.showSuccess(\"User registered successfully\");\n            this.route.navigate([\"/user\"]);\n          } else this.toaster.showError(data.message);\n        },\n        (error) => {\n          this.toaster.showError(error.error.message);\n          if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n        }\n      );\n    }\n  }\n}\n","module.exports = \".main {\\n    width: 50%;\\n    box-shadow: 3px 3px 3px 3px;\\n    background-color: white;\\n    border-radius: 20px;\\n    padding: 40px;\\n    position: absolute;\\n    top: 50%;\\n    right: 50%;\\n    -webkit-transform: translate(50%, -18%);\\n            transform: translate(50%, -18%);\\n    overflow-y: auto;\\n  }\\n  \\n  form {\\n    border: 3px solid #f1f1f1;\\n    padding: 20px;\\n    border-radius: 20px;\\n  }\\n  \\n  input {\\n    padding: 12px 20px;\\n    margin-bottom: 20px;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    border-radius: 15px;\\n  }\\n  \\n  select, textarea {\\n      margin-bottom: 20px;\\n  }\\n  \\n  button {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n  }\\n  \\n  .disabled {\\n    background-color: lightgrey;\\n  }\\n  \\n  .buttondiv{\\n    text-align: center;\\n  }\\n  \\n  .container {\\n    padding: 16px;\\n  }\\n  \\n  span.psw {\\n    float: right;\\n    padding-top: 16px;\\n  }\\n  \\n  .ng-valid[required],\\n  .ng-valid.required {\\n    border-left: 5px solid #42a948;\\n    /* green */\\n  }\\n  \\n  .ng-invalid:not(form) {\\n    border-left: 5px solid #a94442;\\n    /* red */\\n  }\\n  \\n  /* Change styles for span and cancel button on extra small screens */\\n  \\n  @media screen and (max-width: 300px) {\\n    span.psw {\\n      display: block;\\n      float: none;\\n    }\\n    .cancelbtn {\\n      width: 100%;\\n    }\\n  }\\n  \"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 style=\\\"text-align: center;\\\">{{ heading }} Request</h2>\\n\\n  <form\\n    class=\\\"col-md-12\\\"\\n    #requestForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"createRequest(request)\\\"\\n  >\\n    <div class=\\\"container col-md-12\\\">\\n      <label class=\\\"col-md-12\\\" for=\\\"title\\\">\\n        <b>Registration Number</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.token\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Registration number\\\"\\n        name=\\\"token\\\"\\n        required\\n        #token=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"token.valid || token.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Registration Number is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"title\\\">\\n        <b>Contact Number</b>\\n      </label>\\n      <input\\n        type=\\\"number\\\"\\n        [(ngModel)]=\\\"request.contactNumber\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Contact Number\\\"\\n        name=\\\"contactNumber\\\"\\n        required\\n        #contactNumber=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"contactNumber.valid || contactNumber.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Contact Number is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"age\\\">\\n        <b>Age</b>\\n      </label>\\n      <input\\n        type=\\\"number\\\"\\n        [(ngModel)]=\\\"request.age\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Age\\\"\\n        name=\\\"age\\\"\\n        #age=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"gender\\\">\\n        <b>Gender</b>\\n      </label>\\n      <input\\n        typ=\\\"text\\\"\\n        [(ngModel)]=\\\"request.gender\\\"\\n        placeholder=\\\"Gender\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        name=\\\"gender\\\"\\n        #gender=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"country\\\">\\n        <b>Country</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.country\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        name=\\\"country\\\"\\n        required\\n        #country=\\\"ngModel\\\"\\n      />\\n\\n      <div\\n        [hidden]=\\\"country.valid || country.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Country is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"area\\\">\\n        <b>Area in the Country</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.area\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Area in the Country\\\"\\n        name=\\\"area\\\"\\n        required\\n        #area=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"area.valid || area.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Area in the Country is required\\n      </div>\\n      <label class=\\\"col-md-12\\\" for=\\\"status\\\">\\n        <b>Request status New / Inprogrss / Solved</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.status\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        name=\\\"status\\\"\\n        #status=\\\"ngModel\\\"\\n        required\\n      />\\n\\n      <div\\n        [hidden]=\\\"status.valid || status.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        status is required\\n      </div>\\n      <label class=\\\"col-md-12\\\" for=\\\"complaints\\\">\\n        <b>Complaints</b>\\n      </label>\\n      <textarea\\n        [(ngModel)]=\\\"request.complaints\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter complaints\\\"\\n        name=\\\"complaints\\\"\\n        #complaints=\\\"ngModel\\\"\\n      ></textarea>\\n      <div *ngIf=\\\"isEditMode\\\">\\n        <label class=\\\"col-md-12\\\" for=\\\"title\\\">\\n          <b>Doctor Name</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.assignedTo\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Doctor Name\\\"\\n          name=\\\"assignedTo\\\"\\n          required\\n          #assignedTo=\\\"ngModel\\\"\\n        />\\n        <div\\n          [hidden]=\\\"assignedTo.valid || assignedTo.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Doctor Name is required\\n        </div>\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"requirement\\\">\\n          <b>Requirment General / Psych</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.requirement\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"requirement\\\"\\n          #requirement=\\\"ngModel\\\"\\n        />\\n        <label class=\\\"col-md-12\\\" for=\\\"requirement\\\">\\n          <b>Details</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.details\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"requirement\\\"\\n          #requirement=\\\"ngModel\\\"\\n        />\\n        <label class=\\\"col-md-12\\\" for=\\\"covidStatus\\\">\\n          <b>COVID Status</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.covidStatus\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"covidStatus\\\"\\n          #covidStatus=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"medicalHistory\\\">\\n          <b>Past Medical History</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.medicalHistory\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"medicalHistory\\\"\\n          #medicalHistory=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"currentPrescription\\\">\\n          <b>Current Prescription</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.currentPrescription\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"currentPrescription\\\"\\n          #currentPrescription=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"currentIssues\\\">\\n          <b>Current Issues</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.currentIssues\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Current Issues\\\"\\n          name=\\\"currentIssues\\\"\\n          #currentIssues=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"advice\\\">\\n          <b>Advice and prescription given</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.advice\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Advice and prescription given\\\"\\n          name=\\\"advice\\\"\\n          #advice=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"prescriptionIssue\\\">\\n          <b>Prescription Issued ?</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.prescriptionIssue\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"prescriptionIssue\\\"\\n          #prescriptionIssue=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"medicalFollowup\\\">\\n          <b>Medical / Mental /Social Follow up?</b>\\n        </label>\\n        <input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"request.medicalFollowup\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"medicalFollowup\\\"\\n          #medicalFollowup=\\\"ngModel\\\"\\n        />\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"comments\\\">\\n          <b>Comments</b>\\n        </label>\\n        <textarea\\n          [(ngModel)]=\\\"request.comments\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Enter Comments\\\"\\n          name=\\\"comments\\\"\\n          #comments=\\\"ngModel\\\"\\n        ></textarea>\\n      </div>\\n      <div class=\\\"col-md-12 buttondiv\\\">\\n        <button\\n          class=\\\"btn btn-success\\\"\\n          [ngClass]=\\\"{ disabled: !requestForm.form.valid }\\\"\\n          [disabled]=\\\"!requestForm.form.valid\\\"\\n          type=\\\"submit\\\"\\n        >\\n          {{ heading }} Request\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ToasterService } from \"../../../../services/toaster.service\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { CategoryService } from \"src/app/services/category.service\";\nimport { RolesService } from \"src/app/services/role.service\";\nimport { MedicalRequestService } from \"src/app/services/medicalRequest.service\";\nimport countries from \"src/app/utils/countries.json\";\nimport utils from \"src/app/utils/utils.json\";\n\n@Component({\n  selector: \"app-request-create\",\n  templateUrl: \"./request-create.component.html\",\n  styleUrls: [\"./request-create.component.css\"],\n})\nexport class RequestCreateMedicalComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  heading = \"\";\n  request = { createdBy: this.user._id };\n  categories = [];\n  roles = [];\n  users = [];\n  countryList = countries;\n  isEditMode = false;\n\n  statuses = []; // utils.statuses;\n  communicationModes = utils.communicationModes;\n\n  constructor(\n    private route: Router,\n    private _route: ActivatedRoute,\n    private _user: UserService,\n    private _request: MedicalRequestService,\n    private toaster: ToasterService\n  ) {\n    const { url } = this.route;\n    if (url.indexOf(\"edit\") > -1) this.isEditMode = true;\n  }\n\n  loadData() {\n    const { url } = this.route;\n    if (url.indexOf(\"edit\") > -1) {\n      const id = this._route.snapshot.params[\"id\"];\n      this._request.getById(id).subscribe(\n        (res) => {\n          if (res.message == \"success\" && res.data[0]) {\n            this.request = res.data[0];\n          } else this.toaster.showError(res.message);\n        },\n        (error) => {\n          this.toaster.showError(error.error.message);\n          if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n    this.loadData();\n    const id = this._route.snapshot.params[\"id\"];\n    this.heading = id == undefined || id == null ? \"Create\" : \"Edit\";\n  }\n\n  createRequest = (request) => {\n    this._request.create(request).subscribe(\n      (res) => {\n        if (res.message == \"success\")\n          this.route.navigate([\"/requests/medical\"]);\n        else this.toaster.showError(res.message);\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n}\n","module.exports = \".main {\\n    width: 50%;\\n    box-shadow: 3px 3px 3px 3px;\\n    background-color: white;\\n    border-radius: 20px;\\n    padding: 40px;\\n    position: absolute;\\n    top: 50%;\\n    right: 50%;\\n    -webkit-transform: translate(50%, -20%);\\n            transform: translate(50%, -20%);\\n    overflow-y: auto;\\n  }\\n  \\n  form {\\n    border: 3px solid #f1f1f1;\\n    padding: 20px;\\n    border-radius: 20px;\\n  }\\n  \\n  input {\\n    padding: 12px 20px;\\n    margin-bottom: 20px;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    border-radius: 15px;\\n  }\\n  \\n  select, textarea {\\n      margin-bottom: 20px;\\n  }\\n  \\n  button {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n  }\\n  \\n  .disabled {\\n    background-color: lightgrey;\\n  }\\n  \\n  .buttondiv{\\n    text-align: center;\\n  }\\n  \\n  .container {\\n    padding: 16px;\\n  }\\n  \\n  span.psw {\\n    float: right;\\n    padding-top: 16px;\\n  }\\n  \\n  .ng-valid[required],\\n  .ng-valid.required {\\n    border-left: 5px solid #42a948;\\n    /* green */\\n  }\\n  \\n  .ng-invalid:not(form) {\\n    border-left: 5px solid #a94442;\\n    /* red */\\n  }\\n  \\n  /* Change styles for span and cancel button on extra small screens */\\n  \\n  @media screen and (max-width: 300px) {\\n    span.psw {\\n      display: block;\\n      float: none;\\n    }\\n    .cancelbtn {\\n      width: 100%;\\n    }\\n  }\\n  \"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 style=\\\"text-align: center;\\\">{{ heading }} Request</h2>\\n\\n  <form\\n    class=\\\"col-md-12\\\"\\n    #requestForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"createRequest(request)\\\"\\n  >\\n    <div class=\\\"container col-md-12\\\">\\n      <label class=\\\"col-md-12\\\" for=\\\"title\\\">\\n        <b>Token Number</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.token\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Token\\\"\\n        name=\\\"token\\\"\\n        required\\n        #token=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"token.valid || token.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Token is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"currentCountry\\\">\\n        <b>Country of Residence</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.currentCountry\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        name=\\\"currentCountry\\\"\\n        #country=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"name\\\">\\n        <b>Full Name</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.fullName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Full Name\\\"\\n        name=\\\"fullName\\\"\\n        required\\n        #fullName=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"fullName.valid || fullName.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Full Name is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"phoneNumber\\\">\\n        <b>Whatsapp Contact Number</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.phoneNumber\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Whatsapp Contact number\\\"\\n        name=\\\"phoneNumber\\\"\\n        #phoneNumber=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"phoneNumber.valid || phoneNumber.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Whatsapp Contact Number is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"contactPhone\\\">\\n        <b>Phone Contact Number</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.contactPhone\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Phone Contact Number\\\"\\n        name=\\\"contactPhone\\\"\\n        #contactPhone=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"contactPhone.valid || contactPhone.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Phone Contact Number is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"age\\\">\\n        <b>Age</b>\\n      </label>\\n      <input\\n        type=\\\"number\\\"\\n        [(ngModel)]=\\\"request.age\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Age\\\"\\n        name=\\\"age\\\"\\n        #age=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"gender\\\">\\n        <b>Gender</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.gender\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        name=\\\"gender\\\"\\n        #gender=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"supportRequested\\\">\\n        <b>Support Requested</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.supportRequested\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Support Requested\\\"\\n        name=\\\"supportRequested\\\"\\n        required\\n        #supportRequested=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"supportRequested.valid || supportRequested.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Support Requested is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"supportRequiredFor\\\">\\n        <b>Support Requested For</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.supportRequiredFor\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Title\\\"\\n        name=\\\"supportRequiredFor\\\"\\n        #supportRequiredFor=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"contactFullName\\\">\\n        <b>Person to be contacted</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.contactFullName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Person to be contacted\\\"\\n        name=\\\"contactFullName\\\"\\n        #contactFullName=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"houseNumber\\\">\\n        <b>Flat No / House No / House Name</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.houseNumber\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Flat No / House No / House Name\\\"\\n        name=\\\"houseNumber\\\"\\n        #houseNumber=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"houseNumber.valid || houseNumber.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Flat No / House No / House Name is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"area\\\">\\n        <b>Apartments / Local Area / Street / Road</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.area\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Apartments / Local Area / Street / Road\\\"\\n        name=\\\"area\\\"\\n        #area=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"area.valid || area.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Apartments / Local Area / Street / Road is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"landmark\\\">\\n        <b>Landmark & Post Office</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.landmark\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Landmark & Post Office\\\"\\n        name=\\\"landmark\\\"\\n        #landmark=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"district\\\">\\n        <b>District / City</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.district\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter District / City\\\"\\n        name=\\\"district\\\"\\n        #district=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"district.valid || district.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        District / City is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"postal\\\">\\n        <b>Pin or Postal Code</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.postal\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Pin or Postal Code\\\"\\n        name=\\\"postal\\\"\\n        #postal=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"email\\\">\\n        <b>EMAIL Address</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.email\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter EMAIL Address\\\"\\n        name=\\\"email\\\"\\n        #email=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"status\\\">\\n        <b>Status</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.status\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Status\\\"\\n        name=\\\"status\\\"\\n        #status=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"status.valid || status.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Status is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"assignedTo\\\">\\n        <b>Forwarded To</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.assignedTo\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Forwarded To\\\"\\n        name=\\\"assignedTo\\\"\\n        #assignedTo=\\\"ngModel\\\"\\n        required\\n      />\\n      <div\\n        [hidden]=\\\"assignedTo.valid || assignedTo.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Forwarded To is required\\n      </div>\\n      <div class=\\\"col-md-12 buttondiv\\\">\\n        <button\\n          class=\\\"btn btn-success\\\"\\n          [ngClass]=\\\"{ disabled: !requestForm.form.valid }\\\"\\n          [disabled]=\\\"!requestForm.form.valid\\\"\\n          type=\\\"submit\\\"\\n        >\\n          {{ heading }} Request\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ToasterService } from \"../../../../services/toaster.service\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { CategoryService } from \"src/app/services/category.service\";\nimport { RolesService } from \"src/app/services/role.service\";\nimport { RequestService } from \"src/app/services/request.service\";\nimport countries from \"src/app/utils/countries.json\";\nimport utils from \"src/app/utils/utils.json\";\n\n@Component({\n  selector: \"app-request-create\",\n  templateUrl: \"./request-create.component.html\",\n  styleUrls: [\"./request-create.component.css\"],\n})\nexport class RequestCreateNonMedicalComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  heading = \"\";\n  request = { createdBy: this.user._id };\n  categories = [];\n  roles = [];\n  users = [];\n  countryList = countries;\n\n  statuses = []; // utils.statuses;\n  communicationModes = utils.communicationModes;\n\n  constructor(\n    private route: Router,\n    private _route: ActivatedRoute,\n    private _user: UserService,\n    private _category: CategoryService,\n    private _roles: RolesService,\n    private _request: RequestService,\n    private toaster: ToasterService\n  ) {}\n\n  loadData() {\n    const { url } = this.route;\n    if (url.indexOf(\"edit\") > -1) {\n      const id = this._route.snapshot.params[\"id\"];\n      this._request.getById(id).subscribe(\n        (res) => {\n          if (res.message == \"success\" && res.data[0]) {\n            this.request = res.data[0];\n          } else this.toaster.showError(res.message);\n        },\n        (error) => {\n          this.toaster.showError(error.error.message);\n          if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n    this.loadData();\n    const id = this._route.snapshot.params[\"id\"];\n    this.heading = id == undefined || id == null ? \"Create\" : \"Edit\";\n  }\n\n  createRequest = (request) => {\n    this._request.create(request).subscribe(\n      (res) => {\n        if (res.message == \"success\") this.route.navigate([\"/requests\"]);\n        else this.toaster.showError(res.message);\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n}\n","module.exports = \".main {\\n    width: 50%;\\n    box-shadow: 3px 3px 3px 3px;\\n    background-color: white;\\n    border-radius: 20px;\\n    padding: 40px;\\n    position: absolute;\\n    top: 50%;\\n    right: 50%;\\n    -webkit-transform: translate(50%, -25%);\\n            transform: translate(50%, -25%);\\n    overflow-y: auto;\\n  }\\n  \\n  form {\\n    border: 3px solid #f1f1f1;\\n    padding: 20px;\\n    border-radius: 20px;\\n  }\\n  \\n  input {\\n    padding: 12px 20px;\\n    margin-bottom: 20px;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    border-radius: 15px;\\n  }\\n  \\n  select, textarea {\\n      margin-bottom: 20px;\\n  }\\n  \\n  button {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n  }\\n  \\n  .disabled {\\n    background-color: lightgrey;\\n  }\\n  \\n  .buttondiv{\\n    text-align: center;\\n  }\\n  \\n  .container {\\n    padding: 16px;\\n  }\\n  \\n  span.psw {\\n    float: right;\\n    padding-top: 16px;\\n  }\\n  \\n  .ng-valid[required],\\n  .ng-valid.required {\\n    border-left: 5px solid #42a948;\\n    /* green */\\n  }\\n  \\n  .ng-invalid:not(form) {\\n    border-left: 5px solid #a94442;\\n    /* red */\\n  }\\n  \\n  /* Change styles for span and cancel button on extra small screens */\\n  \\n  @media screen and (max-width: 300px) {\\n    span.psw {\\n      display: block;\\n      float: none;\\n    }\\n    .cancelbtn {\\n      width: 100%;\\n    }\\n  }\\n  \"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 style=\\\"text-align: center;\\\">{{ heading }} Request</h2>\\n\\n  <form\\n    class=\\\"col-md-12\\\"\\n    #requestForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"createRequest(request)\\\"\\n  >\\n    <div class=\\\"container col-md-12\\\">\\n      <label class=\\\"col-md-12\\\" for=\\\"title\\\">\\n        <b>Token</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.token\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Token\\\"\\n        name=\\\"token\\\"\\n        required\\n        #token=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"token.valid || token.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Token is required\\n      </div>\\n      <label class=\\\"col-md-12\\\" for=\\\"fullName\\\">\\n        <b>fullName</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.fullName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter fullName\\\"\\n        name=\\\"fullName\\\"\\n        required\\n        #fullName=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"fullName.valid || fullName.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        fullName is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"currentCountry\\\">\\n        <b>Select currentCountry</b>\\n      </label>\\n      <select\\n        [(ngModel)]=\\\"request.currentCountry\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        name=\\\"currentCountry\\\"\\n        required\\n        #currentCountry=\\\"ngModel\\\"\\n      >\\n        <option disabled> currentCountry</option>\\n        <option *ngFor=\\\"let country of countryList\\\" [ngValue]=\\\"country.code\\\">\\n          {{ country.name }} ({{ country.dial_code }})</option\\n        >\\n      </select>\\n      <div\\n        [hidden]=\\\"currentCountry.valid || currentCountry.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        currentCountry is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"phoneNumber\\\">\\n        <b>phoneNumber</b>\\n      </label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"request.phoneNumber\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Full Name\\\"\\n        name=\\\"phoneNumber\\\"\\n        required\\n        #phoneNumber=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"phoneNumber.valid || phoneNumber.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        phoneNumber is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"contactFullName\\\">\\n        <b>Contact Full Name</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.contactFullName\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Primary Contact number\\\"\\n        name=\\\"contactFullName\\\"\\n        #contactFullName=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"contactPhone\\\">\\n        <b>contact Phone</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.contactPhone\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Alternate Contact Number\\\"\\n        name=\\\"contactPhone\\\"\\n        #contactPhone=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"age\\\">\\n        <b>Age</b>\\n      </label>\\n      <input\\n        type=\\\"number\\\"\\n        [(ngModel)]=\\\"request.age\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Age\\\"\\n        name=\\\"age\\\"\\n        #age=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"gender\\\">\\n        <b>gender</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.gender\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"gender\\\"\\n        name=\\\"gender\\\"\\n        #gender=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"supportRequested\\\">\\n        <b>supportRequested</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.supportRequested\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"supportRequested\\\"\\n        name=\\\"supportRequested\\\"\\n        #supportRequested=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"supportRequiredFor\\\">\\n        <b>supportRequiredFor</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.supportRequiredFor\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"supportRequiredFor\\\"\\n        name=\\\"supportRequiredFor\\\"\\n        #supportRequiredFor=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"postal\\\">\\n        <b>postal</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.postal\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"postal\\\"\\n        name=\\\"postal\\\"\\n        #postal=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"email\\\">\\n        <b>email</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.email\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"email\\\"\\n        name=\\\"email\\\"\\n        #email=\\\"ngModel\\\"\\n      />\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"fullAddress\\\">\\n        <b>Full Address</b>\\n      </label>\\n      <textarea\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Full Address\\\"\\n        [(ngModel)]=\\\"request.fullAddress\\\"\\n        [maxlength]=\\\"400\\\"\\n        name=\\\"fullAddress\\\"\\n        #fullAddress\\n      ></textarea>\\n\\n      <div *ngIf=\\\"statuses.length > 1\\\">\\n        <label class=\\\"col-md-12\\\" for=\\\"status\\\">\\n          <b>Status</b>\\n        </label>\\n        <select\\n          [(ngModel)]=\\\"request.status\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"status\\\"\\n          required\\n          #status=\\\"ngModel\\\"\\n        >\\n          <option disabled> Status</option>\\n          <option *ngFor=\\\"let status of statuses\\\" [ngValue]=\\\"status.value\\\">{{\\n            status.label\\n          }}</option>\\n        </select>\\n        <div\\n          [hidden]=\\\"status.valid || status.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Status is required\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12\\\" style=\\\"margin-bottom: 10px; margin-top: 10px;\\\">\\n        <b>Please enter user name of assignee.</b>\\n      </div>\\n      <label class=\\\"col-md-12\\\" for=\\\"assignee\\\">\\n        <b>Assignee</b>\\n      </label>\\n      <input\\n        type=\\\"string\\\"\\n        [(ngModel)]=\\\"request.assignedTo\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"assignedTo\\\"\\n        name=\\\"assignedTo\\\"\\n        #assignedTo=\\\"ngModel\\\"\\n      />\\n      <div class=\\\"col-md-12 buttondiv\\\">\\n        <button [disabled]=\\\"!requestForm.form.valid\\\" type=\\\"submit\\\">\\n          Sign Up\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ToasterService } from \"../../../services/toaster.service\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { CategoryService } from \"src/app/services/category.service\";\nimport { RolesService } from \"src/app/services/role.service\";\nimport { RequestService } from \"src/app/services/request.service\";\nimport countries from \"src/app/utils/countries.json\";\nimport utils from \"src/app/utils/utils.json\";\n\n@Component({\n  selector: \"app-request-create\",\n  templateUrl: \"./request-create.component.html\",\n  styleUrls: [\"./request-create.component.css\"],\n})\nexport class RequestCreateComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  heading = \"\";\n  request = { createdBy: this.user._id };\n  categories = [];\n  roles = [];\n  users = [{ value: \"dasd\", label: \"dfdsf\", count: 2 }];\n  countryList = countries;\n\n  statuses = []; // utils.statuses;\n  communicationModes = utils.communicationModes;\n\n  constructor(\n    private route: Router,\n    private _route: ActivatedRoute,\n    private _user: UserService,\n    private _category: CategoryService,\n    private _roles: RolesService,\n    private _request: RequestService,\n    private toaster: ToasterService\n  ) {}\n\n  loadCategories = () => {\n    this._category.list().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.categories = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n\n  setStaus() {\n    const { url } = this.route;\n    if (url.indexOf(\"create\") > -1) {\n      this.request[\"status\"] = 1;\n    } else if (url.indexOf(\"edit\") > -1) this.statuses = utils.statuses; //.filter((d) => d.value != 1);\n  }\n\n  loadData() {\n    const { url } = this.route;\n    if (url.indexOf(\"edit\") > -1) {\n      const id = this._route.snapshot.params[\"id\"];\n      this._request.getById(id).subscribe(\n        (res) => {\n          if (res.message == \"success\" && res.data[0]) {\n            this.request = res.data[0];\n          } else this.toaster.showError(res.message);\n        },\n        (error) => {\n          this.toaster.showError(error.error.message);\n          if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n    this.setStaus();\n    this.loadCategories();\n    this.loadData();\n    const id = this._route.snapshot.params[\"id\"];\n    this.heading = id == undefined || id == null ? \"Create\" : \"Edit\";\n  }\n\n  createRequest = (request) => {\n    this._request.create(request).subscribe(\n      (res) => {\n        if (res.message == \"success\") this.route.navigate([\"/requests\"]);\n        else this.toaster.showError(res.message);\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n}\n","module.exports = \".maindiv {\\n    position: absolute;\\n    top: 50%;\\n    right: 50%;\\n    -webkit-transform: translate(50%, -50%);\\n            transform: translate(50%, -50%);\\n  }\\n  \\n  .heading {\\n    font-weight: 700;\\n    font-size: 30px;\\n    text-align: center;\\n  }\\n  \\n  button {\\n      background-color: #4CAF50;\\n      color: white;\\n      padding: 14px 20px;\\n      margin: 8px 0;\\n      border: none;\\n      cursor: pointer;\\n      width: 100%;\\n    }\\n  \\n  button:hover {\\n      opacity: 0.8;\\n    }\\n  \\n  .imgtxt {\\n      text-align: center;\\n      font-weight: 700;\\n      font-size: 20px;\\n      margin-top: 30px;\\n    }\\n  \\n  .imgdiv {\\n      cursor: pointer;\\n    }\"","module.exports = \"<div class=\\\"maindiv col-md-12\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div\\n            class=\\\"col-md-6 imgdiv\\\"\\n            routerLink=\\\"/requests/medical\\\"\\n          >\\n            <div class=\\\"card-container\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"front\\\">\\n                  <div class=\\\"cover\\\">\\n                    <img src=\\\"../../../assets/images/cardbg.jpg\\\" />\\n                  </div>\\n                  <div class=\\\"user\\\">\\n                    <img\\n                      class=\\\"img-circle\\\"\\n                      src=\\\"../../../assets/images/category.png\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h3 class=\\\"name\\\">Medical</h3>\\n                      <p class=\\\"profession\\\"></p>\\n\\n                      <p class=\\\"text-center\\\">\\n                        The list of medical requests can be viewed and modified in this page.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"footer\\\"></div>\\n                  </div>\\n                </div>\\n                <!-- end front panel -->\\n                <div class=\\\"back\\\">\\n                  <div class=\\\"header\\\">\\n                    <h5 class=\\\"motto\\\">\\n                      \\\"Clean your hands often. Use soap and water, or an\\n                      alcohol-based hand rub.\\\"\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"footer\\\"></div>\\n                </div>\\n                <!-- end back panel -->\\n              </div>\\n              <!-- end card -->\\n            </div>\\n            <!-- end card-container -->\\n          </div>\\n          <div\\n            class=\\\"col-md-6 imgdiv\\\"\\n            routerLink=\\\"/requests/non-medical\\\"\\n          >\\n            <div class=\\\"card-container\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"front\\\">\\n                  <div class=\\\"cover\\\">\\n                    <img src=\\\"../../../assets/images/cardbg.jpg\\\" />\\n                  </div>\\n                  <div class=\\\"user\\\">\\n                    <img\\n                      class=\\\"img-circle\\\"\\n                      src=\\\"../../../assets/images/category.png\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"content\\\">\\n                    <div class=\\\"main\\\">\\n                      <h3 class=\\\"name\\\">Non-Medical</h3>\\n                      <p class=\\\"profession\\\"></p>\\n\\n                      <p class=\\\"text-center\\\">\\n                        The list of non-medical requests can be viewed and modified in this page.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"footer\\\"></div>\\n                  </div>\\n                </div>\\n                <!-- end front panel -->\\n                <div class=\\\"back\\\">\\n                  <div class=\\\"header\\\">\\n                    <h5 class=\\\"motto\\\">\\n                      \\\"Maintain a safe distance from anyone who is coughing or\\n                      sneezing.\\\"\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"footer\\\"></div>\\n                </div>\\n                <!-- end back panel -->\\n              </div>\\n              <!-- end card -->\\n            </div>\\n            <!-- end card-container -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ToasterService } from \"../../../services/toaster.service\";\nimport { Router } from \"@angular/router\";\nimport utils from \"../../../utils/utils.json\";\n\n@Component({\n  selector: \"app-request-home\",\n  templateUrl: \"./request-home.component.html\",\n  styleUrls: [\n    \"./request-home.component.css\",\n    \"../../../../assets/styles/rotating-card.css\",\n  ],\n})\nexport class RequestHomeComponent implements OnInit {\n  statuses = utils.statuses.map((d) => d.label);\n  requestsSummary = [];\n  roleSummary = [];\n  categorySummary = [];\n  userSummary = [];\n\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  type = this.user.type === \"superAdmin\" ? \"admin\" : \"regular\";\n  userType =\n    this.user.type === \"superAdmin\" ? \"Admins\" : \"Volunteers/Service Providers\";\n\n  constructor(\n    private toaster: ToasterService,\n    private route: Router,\n  ) {}\n\n  loadDahsboard() {}\n\n  ngOnInit() {\n    if (this.user.type === undefined) {\n      this.toaster.showError(\"Authentication Failed. Please login again.\");\n      this.route.navigate([\"login\"]);\n      return;\n    }\n    this.loadDahsboard();\n  }\n\n  login() {}\n}\n","module.exports = \".main {\\n  width: 80%;\\n  box-shadow: 3px 3px 3px 3px;\\n  background-color: white;\\n  border-radius: 20px;\\n  padding: 40px;\\n  position: absolute;\\n  top: 1%;\\n  right: 50%;\\n  -webkit-transform: translate(50%, 0%);\\n          transform: translate(50%, 0%);\\n}\\n\\n.details {\\n  margin-top: 20px;\\n  text-align: center;\\n}\\n\\nform {\\n  border: 3px solid #f1f1f1;\\n  padding: 20px;\\n  border-radius: 20px;\\n}\\n\\ninput[type=\\\"text\\\"],\\ninput[type=\\\"password\\\"] {\\n  padding: 12px 20px;\\n  margin-bottom: 20px;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n  border-radius: 15px;\\n}\\n\\nselect, textarea {\\n  margin-bottom: 20px;\\n}\\n\\nbutton {\\n  background-color: #4caf50;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.disabled {\\n  background-color: lightgrey;\\n}\\n\\n.buttondiv {\\n  text-align: center;\\n}\\n\\n.stepdiv {\\n  background-color: red;\\n  width: 500px;\\n  height: 150px;\\n  border-radius: 20px;\\n  margin-top: 20px;\\n  padding-top: 20px;\\n  border: 1px solid black;\\n}\\n\\n.stepdiv1 {\\n  background-color: red;\\n  height: 150px;\\n  border-radius: 20px;\\n  margin-top: 20px;\\n  padding-top: 20px;\\n  border: 1px solid black;\\n}\\n\\n.journeydiv {\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.journeydiv1 {\\n  text-align: center;\\n  width: 85%;\\n}\\n\\n.arrowdiv {\\n  width: 15%;\\n}\\n\\n.arrow {\\n  font-size: 50px;\\n  position: relative;\\n  top: 50px;\\n  right: 15px;\\n}\\n\\n.new {\\n  background-color: blanchedalmond;\\n}\\n\\n.inprogress {\\n  background-color: yellow;\\n}\\n\\n.resolved {\\n  background-color: green;\\n  color: white;\\n}\\n\\n.archive {\\n  background-color: blue;\\n  color: white;\\n}\\n\\n.separator {\\n  height: 10px;\\n  background-color: black;\\n  margin: 50px 0 50px 0;\\n}\\n\\n.ng-valid[required],\\n.ng-valid.required {\\n  border-left: 5px solid #42a948;\\n  /* green */\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */\\n}\\n\"","module.exports = \"<!--Section to update status and comments, Can be created as component if needed-->\\n<div class=\\\"main col-md-12\\\">\\n  <h1 style=\\\"text-align: center;\\\" *ngIf=\\\"request.requestID\\\">\\n    {{ request.requestID.title }}\\n  </h1>\\n  <h5 style=\\\"text-align: center;\\\">\\n    Created By: {{ request.requestID ? request.requestID.createdBy : \\\"\\\" }}\\n    {{ request.requestID ? request.requestID.createdBy : \\\"\\\" }}\\n  </h5>\\n\\n  <div class=\\\"col-md-12 details\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <b>Token:</b>\\n        {{ request.requestID ? request.requestID.token : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>Full Name:</b>\\n        {{ request.requestID ? request.requestID.fullName : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>Current Country:</b>\\n        {{ request.requestID ? request.requestID.currentCountry : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>Contact Phone:</b>\\n        {{ request.requestID ? request.requestID.contactPhone : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>status:</b>\\n        {{ request.requestID ? request.requestID.status : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>assignedTo:</b>\\n        {{ request.requestID ? request.requestID.assignedTo : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>created at:</b>\\n        {{ request.requestID ? request.requestID.created_at : \\\"\\\" }}\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <b>Age:</b>\\n        {{ request.requestID ? request.requestID.age : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>Gender Address:</b>\\n        {{ request.requestID ? request.requestID.gender : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>supportRequested :</b>\\n        {{ request.requestID ? request.requestID.supportRequested : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>supportRequiredFor:</b>\\n        {{ request.requestID ? request.requestID.supportRequiredFor : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>Contact Full Name:</b>\\n        {{ request.requestID ? request.requestID.contactFullName : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>district:</b>\\n        {{ request.requestID ? request.requestID.district : \\\"\\\" }}\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <b>postal:</b>\\n        {{ request.requestID ? request.requestID.postal : \\\"\\\" }}\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator col-md-12\\\"></div>\\n  <h3 style=\\\"text-align: center;\\\" *ngIf=\\\"request.requestID\\\">\\n    Request Status\\n  </h3>\\n\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"col-md-4\\\" *ngFor=\\\"let item of requestdata; let last = last\\\">\\n      <div class=\\\"col-md-11 journeydiv1\\\">\\n        <div\\n          class=\\\"stepdiv1 col-md-12\\\"\\n          [ngClass]=\\\"{\\n            new: item.statusid === 1,\\n            inprogress: item.statusid == 2,\\n            resolved: item.statusid == 3,\\n            archive: item.statusid == 4\\n          }\\\"\\n        >\\n          <b>Assigned To:</b> {{ item.assigned }}\\n          <div class=\\\"col-md-12\\\"><b>Status:</b> {{ item.status }}</div>\\n          <div class=\\\"col-md-12\\\"><b>Comment:</b> {{ item.comment }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 arrowdiv\\\" *ngIf=\\\"!last\\\">\\n        <div><span class=\\\"arrow\\\">&#8594;</span></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator col-md-12\\\"></div>\\n  <div\\n    *ngIf=\\\"(request.requestID && request.requestID.status != 4) || isVolunteer\\\"\\n  >\\n    <h3 style=\\\"text-align: center;\\\">Add Comment</h3>\\n    <form class=\\\"col-md-12\\\" #commentForm=\\\"ngForm\\\" (ngSubmit)=\\\"update(updates)\\\">\\n      <div class=\\\"container col-md-12\\\">\\n        <label class=\\\"col-md-12\\\" for=\\\"comment\\\"><b>Comment</b></label>\\n        <textarea\\n          class=\\\"form-control col-md-12\\\"\\n          placeholder=\\\"Comment\\\"\\n          [(ngModel)]=\\\"updates.comment\\\"\\n          [maxlength]=\\\"400\\\"\\n          name=\\\"comment\\\"\\n          #comment=\\\"ngModel\\\"\\n          required\\n        >\\n        </textarea>\\n        <div\\n          [hidden]=\\\"comment.valid || comment.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Comment is required\\n        </div>\\n\\n        <label class=\\\"col-md-12\\\" for=\\\"status\\\">\\n          <b>Status</b>\\n        </label>\\n        <select\\n          [(ngModel)]=\\\"updates.status\\\"\\n          class=\\\"form-control col-md-12\\\"\\n          name=\\\"status\\\"\\n          required\\n          #status=\\\"ngModel\\\"\\n        >\\n          <option disabled> Status</option>\\n          <option *ngFor=\\\"let status of statuses\\\" [ngValue]=\\\"status.value\\\">{{\\n            status.label\\n          }}</option>\\n        </select>\\n        <div\\n          [hidden]=\\\"status.valid || status.pristine\\\"\\n          class=\\\"alert alert-danger col-md-12\\\"\\n        >\\n          Status is required\\n        </div>\\n\\n        <b> Mark as resolved will auto assign to volunteer</b>\\n        <button\\n          class=\\\"col-md-12\\\"\\n          [ngClass]=\\\"{ disabled: !commentForm.form.valid }\\\"\\n          [disabled]=\\\"!commentForm.form.valid\\\"\\n          type=\\\"submit\\\"\\n        >\\n          Update\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ToasterService } from \"../../../services/toaster.service\";\nimport { RequestService } from \"src/app/services/request.service\";\nimport countries from \"src/app/utils/countries.json\";\nimport utils from \"src/app/utils/utils.json\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-request-interact\",\n  templateUrl: \"./request-interact.component.html\",\n  styleUrls: [\"./request-interact.component.css\"],\n})\nexport class RequestInteractComponent implements OnInit {\n  request = {};\n  updates = {};\n  countrycode = \"\";\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  isVolunteer = false;\n  assignments = [];\n  comments = [];\n  requestdata = [];\n  countryList = countries;\n  statuses = [];\n  communicationModes = utils.communicationModes;\n\n  constructor(\n    private _request: RequestService,\n    private toaster: ToasterService,\n    private _route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.isVolunteer = this.user.role && this.user.role.requestReadAccess;\n  }\n\n  loadData() {\n    const id = this._route.snapshot.params[\"id\"];\n    this.requestdata = [];\n    this._request.interact(id).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else {\n          const { data } = res;\n          this.request = data;\n          console.log(this.request);\n          this.setStaus();\n          this.assignments = this.request[\"assignment\"];\n          this.comments = this.request[\"comments\"];\n          this.processRequestData();\n          this.updates[\"id\"] = data._id;\n        }\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.router.navigate([\"login\"]);\n      }\n    );\n  }\n\n  processRequestData() {\n    for (let i = 0; i < this.assignments.length; i++) {\n      if (i == 0) {\n        this.requestdata.push({\n          assigned: this.assignments[i].assignedTo,\n          status: this.assignments[i].status,\n          // status: this.getStatus(this.assignments[i].status),\n          statusid: this.assignments[i].status,\n          comment: \"Request Initiated\",\n        });\n      } else {\n        this.requestdata.push({\n          assigned: this.assignments[i].assignedTo\n            ? this.assignments[i].assignedTo\n            : this.assignments[0].assignedTo,\n          status: this.assignments[i].status,\n          // status: this.getStatus(this.assignments[i].status),\n          statusid: this.assignments[i].status,\n          comment: this.comments[i - 1] ? this.comments[i - 1].comment : \"\",\n        });\n      }\n    }\n  }\n\n  getStatus(value) {\n    const status = utils.statuses.filter((item) => item.value == value);\n    return status[0].label;\n  }\n\n  update(commentData) {\n    let req = commentData;\n    req[\"user\"] = this.user._id;\n    this._request.addComment(commentData).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.loadData();\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.router.navigate([\"login\"]);\n      }\n    );\n  }\n\n  setStaus() {\n    if (this.isVolunteer)\n      this.statuses = utils.statuses.filter((d) => d.value != 1);\n    else\n      this.statuses = utils.statuses.filter(\n        (d) => d.value != 1 && d.value != 2 && d.value != 5\n      );\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n}\n","module.exports = \".btn {\\n  margin-top: 20px;\\n}\\n\\n  button:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .category {\\n    background-color: white;\\n    padding: 15px;\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 2px 2px;\\n    margin-top: 20px;\\n    margin-bottom: 30px;\\n    border: 3px solid transparent;\\n    background-clip: padding-box;\\n    min-height: 100px;\\n  }\\n\\n  .buttondiv {\\n    text-align: center;\\n  }\\n\\n  .activetab {\\n    background-color: blue;\\n    color: white;\\n    font-weight: 700;\\n  }\\n\\n  ul {\\n    border-bottom: 5px solid black;\\n    margin-bottom: 20px;\\n  }\\n\\n  .categories {\\n    cursor: pointer;\\n  }\\n\\n  .category_tabs {\\n    padding: 10px 20px 10px 20px;\\n    border: 1px solid lightslategray;\\n    border-radius: 5px;\\n  }\\n\\n  .request {\\n    background-color: white;\\n    padding: 15px;\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 2px 2px;\\n    margin-top: 20px;\\n    margin-bottom: 30px;\\n    border: 3px solid transparent;\\n    background-clip: padding-box;\\n    min-height: 150px;\\n  }\\n\\n  .active {\\n    background-color: #ccc;\\n    font-weight: 700; \\n  }\\n\\n  .status {\\n    padding: 15px;\\n    border: 1px solid lightslategray;\\n    border-radius: 10px;\\n    cursor: pointer;\\n  }\\n\\n\\n\\n\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 class=\\\"col-md-12\\\" style=\\\"text-align: center;color:white\\\">Requests</h2>\\n\\n  <div class=\\\"col-md-12\\\">\\n    <ag-grid-angular\\n      style=\\\"height: 600px;\\\"\\n      class=\\\"ag-theme-alpine col-md-12\\\"\\n      [rowData]=\\\"rowData\\\"\\n      [columnDefs]=\\\"columnDefs\\\"\\n      [headerHeight]=\\\"50\\\"\\n      [rowHeight]=\\\"55\\\"\\n      [suppressMenuHide]=\\\"true\\\"\\n    >\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"col-md-12 buttondiv\\\" *ngIf=\\\"isVolunteer\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/requests/create/medical\\\">\\n      Create a new request\\n    </button>\\n    <button style=\\\"margin-left:30px\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/requests/import\\\">\\n      Import Data\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MedicalRequestService } from \"../../../services/medicalRequest.service\";\nimport { ToasterService } from \"../../../services/toaster.service\";\nimport { RequestCellRendererComponent } from \"../../cell_renderer/requestCellRenderer/cell_renderer.component\";\nimport countries from \"src/app/utils/countries.json\";\nimport utils from \"src/app/utils/utils.json\";\n\n@Component({\n  selector: \"app-requests\",\n  templateUrl: \"./requests-medical.component.html\",\n  styleUrls: [\"./requests-medical.component.css\"],\n})\nexport class RequestsMedicalComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  isVolunteer = this.user.role && this.user.role.requestReadAccess;\n  requests = [];\n  categories = [];\n  status = [];\n  filtered_requests = [];\n  selectedCategory: string;\n  selectedStatus: string;\n  columnDefs = [];\n  rowData = [];\n  countryList = countries;\n  statuses = utils.statuses;\n  communicationModes = utils.communicationModes;\n\n  constructor(\n    private _request: MedicalRequestService,\n    private toaster: ToasterService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {\n    this._request.listByRole(this.user._id).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else {\n          this.requests = res.data;\n          this.columnDefs = [\n            {\n              headerName: \"Token #\",\n              field: \"token\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Doctor Name\",\n              field: \"assignedTo\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Country\",\n              field: \"country\",\n              sortable: true,\n              filter: true,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Area in the country\",\n              field: \"area\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Age\",\n              field: \"age\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n\n            {\n              headerName: \"Gender\",\n              field: \"gender\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"COVID Status\",\n              field: \"covidStatus\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Past Medical History\",\n              field: \"medicalHistory\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Current Prescription\",\n              field: \"currentPrescription\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Current Issues\",\n              field: \"currentIssues\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Advice and prescription given\",\n              field: \"advice\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Prescription Issued ?\",\n              field: \"prescriptionIssue\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Mental Health/Social Follow-up?\",\n              field: \"medicalFollowup\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Comments\",\n              field: \"comments\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Actions\",\n              field: \"action\",\n              cellRendererFramework: RequestCellRendererComponent,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n          ];\n          this.rowData = this.requests;\n        }\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n\n  getitemFromList(key, value, list = [], valueKey) {\n    const item = list.filter((d) => d[key] === value) || [];\n    return item.length > 0 ? item[0][valueKey] : \"\";\n  }\n}\n","module.exports = \".btn {\\n  margin-top: 20px;\\n}\\n\\n  button:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .category {\\n    background-color: white;\\n    padding: 15px;\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 2px 2px;\\n    margin-top: 20px;\\n    margin-bottom: 30px;\\n    border: 3px solid transparent;\\n    background-clip: padding-box;\\n    min-height: 100px;\\n  }\\n\\n  .buttondiv {\\n    text-align: center;\\n  }\\n\\n  .activetab {\\n    background-color: blue;\\n    color: white;\\n    font-weight: 700;\\n  }\\n\\n  ul {\\n    border-bottom: 5px solid black;\\n    margin-bottom: 20px;\\n  }\\n\\n  .categories {\\n    cursor: pointer;\\n  }\\n\\n  .category_tabs {\\n    padding: 10px 20px 10px 20px;\\n    border: 1px solid lightslategray;\\n    border-radius: 5px;\\n  }\\n\\n  .request {\\n    background-color: white;\\n    padding: 15px;\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 2px 2px;\\n    margin-top: 20px;\\n    margin-bottom: 30px;\\n    border: 3px solid transparent;\\n    background-clip: padding-box;\\n    min-height: 150px;\\n  }\\n\\n  .active {\\n    background-color: #ccc;\\n    font-weight: 700; \\n  }\\n\\n  .status {\\n    padding: 15px;\\n    border: 1px solid lightslategray;\\n    border-radius: 10px;\\n    cursor: pointer;\\n  }\\n\\n\\n\\n\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 class=\\\"col-md-12\\\" style=\\\"text-align: center;color:white\\\">Requests</h2>\\n\\n  <div class=\\\"col-md-12\\\">\\n    <ag-grid-angular\\n      style=\\\"height: 600px;\\\"\\n      class=\\\"ag-theme-alpine col-md-12\\\"\\n      [rowData]=\\\"rowData\\\"\\n      [columnDefs]=\\\"columnDefs\\\"\\n      [headerHeight]=\\\"50\\\"\\n      [rowHeight]=\\\"55\\\"\\n      [suppressMenuHide]=\\\"true\\\"\\n    >\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"col-md-12 buttondiv\\\" *ngIf=\\\"isVolunteer\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/requests/create/nonmedical\\\">\\n      Create a new request\\n    </button>\\n    <button style=\\\"margin-left:30px\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/requests/import\\\">\\n      Import Data\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { RequestService } from \"../../../services/request.service\";\nimport { ToasterService } from \"../../../services/toaster.service\";\nimport { RequestCellRendererComponent } from \"../../cell_renderer/requestCellRenderer/cell_renderer.component\";\nimport countries from \"src/app/utils/countries.json\";\nimport utils from \"src/app/utils/utils.json\";\n\n@Component({\n  selector: \"app-requests\",\n  templateUrl: \"./requests-nonmedical.component.html\",\n  styleUrls: [\"./requests-nonmedical.component.css\"],\n})\nexport class RequestsNonMedicalComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  isVolunteer = this.user.role && this.user.role.requestReadAccess;\n  requests = [];\n  categories = [];\n  status = [];\n  filtered_requests = [];\n  selectedCategory: string;\n  selectedStatus: string;\n  columnDefs = [];\n  rowData = [];\n  countryList = countries;\n  statuses = utils.statuses;\n  communicationModes = utils.communicationModes;\n\n  constructor(\n    private _request: RequestService,\n    private toaster: ToasterService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {\n    this._request.listByRole(this.user._id).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else {\n          this.requests = res.data;\n          console.log(this.requests);\n          this.columnDefs = [\n            {\n              headerName: \"Token #\",\n              field: \"token\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Country of residence\",\n              // valueGetter: function (params) {\n              //   let country = countries.filter(\n              //     (item) => item.code == params.data.country\n              //   );\n              //   return country[0].name;\n              // },\n              field: \"currentCountry\",\n\n              sortable: true,\n              filter: true,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Full Name\",\n              field: \"fullName\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Whatsapp Contact Number\",\n              field: \"phoneNumber\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Phone Contact Number\",\n              field: \"contactPhone\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Age\",\n              field: \"age\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Gender\",\n              field: \"gender\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Support Requested\",\n              field: \"supportRequested\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Support Requested For\",\n              field: \"supportRequiredFor\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Person to be contacted\",\n              field: \"contactFullName\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Flat No / House No / House Name\",\n              field: \"houseNumber\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Apartments / Local Area / Street / Road\",\n              field: \"area\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Landmark & Post Office\",\n              field: \"landmark\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"District / City\",\n              field: \"district\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Pin or Postal Code\",\n              field: \"postal\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"EMAIL Address\",\n              field: \"email\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Status\",\n              field: \"status\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Forwarded To\",\n              field: \"assignedTo\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Actions\",\n              field: \"action\",\n              cellRendererFramework: RequestCellRendererComponent,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n          ];\n          this.rowData = this.requests;\n        }\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n\n  getitemFromList(key, value, list = [], valueKey) {\n    const item = list.filter((d) => d[key] === value) || [];\n    return item.length > 0 ? item[0][valueKey] : \"\";\n  }\n}\n","module.exports = \".main {\\n  width: 50%;\\n  box-shadow: 3px 3px 3px 3px;\\n  background-color: white;\\n  border-radius: 20px;\\n  padding: 40px;\\n  position: absolute;\\n  top: 50%;\\n  right: 50%;\\n  -webkit-transform: translate(50%, -50%);\\n          transform: translate(50%, -50%);\\n}\\n\\nform {\\n  border: 3px solid #f1f1f1;\\n  padding: 20px;\\n  border-radius: 20px;\\n}\\n\\ninput[type=\\\"text\\\"],\\ninput[type=\\\"password\\\"] {\\n  padding: 12px 20px;\\n  margin-bottom: 20px;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n  border-radius: 15px;\\n}\\n\\nbutton {\\n  background-color: #4caf50;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.disabled {\\n  background-color: lightgrey;\\n}\\n\\n.buttondiv {\\n  text-align: center;\\n}\\n\\nselect {\\n  margin-bottom: 20px;\\n}\\n\\n.ng-valid[required],\\n.ng-valid.required {\\n  border-left: 5px solid #42a948;\\n  /* green */\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */\\n}\\n\\nspan.psw {\\n  float: right;\\n  padding-top: 16px;\\n}\\n\\n.custom-control-label {\\n  margin-left: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 style=\\\"text-align: center;\\\">Create Roles</h2>\\n\\n  <form class=\\\"col-md-12\\\" #roleForm=\\\"ngForm\\\" (ngSubmit)=\\\"create(role)\\\">\\n    <div class=\\\"container col-md-12\\\">\\n      <label class=\\\"col-md-12\\\" for=\\\"name\\\"><b>Role</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"role.name\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Role\\\"\\n        name=\\\"name\\\"\\n        required\\n        #name=\\\"ngModel\\\"\\n      />\\n      <div\\n        [hidden]=\\\"name.valid || name.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Role Name is required\\n      </div>\\n\\n      <label class=\\\"col-md-12\\\" for=\\\"psw\\\"><b>Description</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"role.description\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        placeholder=\\\"Enter Description\\\"\\n        name=\\\"description\\\"\\n        #description=\\\"ngModel\\\"\\n      />\\n      <label class=\\\"col-md-12\\\" for=\\\"category\\\">Category</label>\\n      <select\\n        [(ngModel)]=\\\"role.category\\\"\\n        name=\\\"category\\\"\\n        class=\\\"form-control col-md-12\\\"\\n        required\\n        #category=\\\"ngModel\\\"\\n      >\\n        <option disabled>Select Category</option>\\n        <option *ngFor=\\\"let category of categories\\\" [ngValue]=\\\"category._id\\\">{{\\n          category.name\\n        }}</option>\\n      </select>\\n      <div\\n        [hidden]=\\\"category.valid || category.pristine\\\"\\n        class=\\\"alert alert-danger col-md-12\\\"\\n      >\\n        Category is required\\n      </div>\\n      <!-- Default checked -->\\n      <div class=\\\"custom-control custom-switch\\\">\\n        <input\\n          type=\\\"checkbox\\\"\\n          class=\\\"custom-control-input\\\"\\n          name=\\\"requestReadAccess\\\"\\n          [(ngModel)]=\\\"role.requestReadAccess\\\"\\n        />\\n        <label class=\\\"custom-control-label\\\" for=\\\"customSwitch1\\\"\\n          >Grant permission to create / Manage Requests</label\\n        >\\n      </div>\\n      <div class=\\\"col-md-12 buttondiv\\\">\\n        <button\\n          class=\\\"btn btn-success\\\"\\n          [ngClass]=\\\"{ disabled: !roleForm.form.valid }\\\"\\n          [disabled]=\\\"!roleForm.form.valid\\\"\\n          type=\\\"submit\\\"\\n        >\\n          Create Role\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { RolesService } from \"../../../services/role.service\";\nimport { CategoryService } from \"../../../services/category.service\";\nimport { Router } from \"@angular/router\";\nimport { ToasterService } from \"../../../services/toaster.service\";\n\n@Component({\n  selector: \"app-create-roles\",\n  templateUrl: \"./create-roles.component.html\",\n  styleUrls: [\"./create-roles.component.css\"],\n})\nexport class CreateRolesComponent implements OnInit {\n  role = {};\n  categories = [];\n  constructor(\n    private _role: RolesService,\n    private _category: CategoryService,\n    private route: Router,\n    private toaster: ToasterService\n  ) {}\n\n  loadCategories = () => {\n    this._category.list().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else this.categories = res.data;\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  };\n\n  ngOnInit() {\n    this.loadCategories();\n  }\n\n  create(data) {\n    this._role.create(data).subscribe(\n      (res) => {\n        if (res.code == 200) this.route.navigate([\"/roles\"]);\n        else this.toaster.showError(res.message);\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n}\n","module.exports = \".btn {\\n  margin-top: 20px;\\n}\\n\\n  button:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .role {\\n    background-color: white;\\n    padding: 15px;\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 2px 2px;\\n    margin-top: 20px;\\n    margin-bottom: 30px;\\n    border: 3px solid transparent;\\n    background-clip: padding-box;\\n    min-height: 150px;\\n  }\\n\\n  .buttondiv {\\n    text-align: center;\\n  }\\n\\n  .active{\\n    background-color: blue;\\n    color: white;\\n    font-weight: 700;\\n  }\\n\\n  ul {\\n    border-bottom: 5px solid black;\\n    margin-bottom: 20px;\\n  }\\n\\n  .categories {\\n    cursor: pointer;\\n  }\\n\\n  .category_tabs {\\n    padding: 10px 20px 10px 20px;\\n    border: 1px solid lightslategray;\\n    border-radius: 5px;\\n  }\"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 class=\\\"col-md-12\\\" style=\\\"text-align: center;color:white\\\">Available Roles</h2>\\n  <div class=\\\"col-md-12\\\">\\n    <ag-grid-angular\\n      style=\\\"height: 600px;\\\"\\n      class=\\\"ag-theme-alpine col-md-12\\\"\\n      [rowData]=\\\"rowData\\\"\\n      [columnDefs]=\\\"columnDefs\\\"\\n      [headerHeight]=\\\"50\\\"\\n      [rowHeight]=\\\"55\\\"\\n      [suppressMenuHide]=\\\"true\\\"\\n      (gridReady)=\\\"onGridReady($event)\\\"\\n    >\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"col-md-12 buttondiv\\\" *ngIf=\\\"user.type == 'admin'\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/roles/create\\\">\\n      Create a new role\\n    </button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { RolesService } from \"../../services/role.service\";\nimport { ToasterService } from \"../../services/toaster.service\";\n\n@Component({\n  selector: \"app-roles\",\n  templateUrl: \"./roles.component.html\",\n  styleUrls: [\"./roles.component.css\"],\n})\nexport class RolesComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  roles = [];\n  categories = [];\n  filtered_roles = [];\n  selectedCategory: string;\n  columnDefs = [];\n  rowData = [];\n  gridApi = [];\n  gridColumnApi = [];\n\n  constructor(\n    private _roles: RolesService,\n    private route: Router,\n    private toaster: ToasterService\n  ) {}\n\n  ngOnInit() {\n    this._roles.list().subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else {\n          this.roles = res.data;\n          this.columnDefs = [\n            {\n              headerName: \"Category\",\n              field: \"category.name\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n              sortable: true,\n              filter: true,\n            },\n            {\n              headerName: \"Role\",\n              field: \"name\",\n              sortable: true,\n              filter: true,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Description\",\n              field: \"description\",\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n          ];\n          this.rowData = this.roles;\n        }\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    params.api.sizeColumnsToFit();\n  }\n}\n","module.exports = \"  button:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .btn {\\n    margin-top: 20px;\\n  }\\n\\n  .user {\\n    background-color: white;\\n    padding: 15px;\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 2px 2px;\\n    margin-top: 20px;\\n    margin-bottom: 30px;\\n    border: 3px solid transparent;\\n    background-clip: padding-box;\\n    min-height: 150px;\\n  }\\n\\n  .buttondiv {\\n    text-align: center;\\n  }\\n\\n  .active{\\n    background-color: blue;\\n    color: white;\\n    font-weight: 700;\\n  }\\n\\n  ul {\\n    border-bottom: 5px solid black;\\n    margin-bottom: 20px;\\n  }\\n\\n  .categories {\\n    cursor: pointer;\\n  }\\n\\n  .category_tabs {\\n    padding: 10px 20px 10px 20px;\\n    border: 1px solid lightslategray;\\n    border-radius: 5px;\\n  }\\n  \"","module.exports = \"<div class=\\\"main col-md-12\\\">\\n  <h2 class=\\\"col-md-12\\\" style=\\\"text-align: center; color: white;\\\">\\n    Available {{ heading }}\\n  </h2>\\n\\n  <div class=\\\"col-md-12\\\">\\n    <ag-grid-angular\\n      style=\\\"height: 600px;\\\"\\n      class=\\\"ag-theme-alpine col-md-12\\\"\\n      [rowData]=\\\"rowData\\\"\\n      [columnDefs]=\\\"columnDefs\\\"\\n      [headerHeight]=\\\"50\\\"\\n      [rowHeight]=\\\"55\\\"\\n      [suppressMenuHide]=\\\"true\\\"\\n      (gridReady)=\\\"onGridReady($event)\\\"\\n    >\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"col-md-12 buttondiv\\\">\\n    <button\\n      *ngIf=\\\"user.type == 'admin'\\\"\\n      class=\\\"btn btn-primary\\\"\\n      type=\\\"button\\\"\\n      routerLink=\\\"/home/register\\\"\\n    >\\n      Create a new user\\n    </button>\\n    <button\\n      *ngIf=\\\"user.type == 'superAdmin'\\\"\\n      class=\\\"btn btn-primary\\\"\\n      type=\\\"button\\\"\\n      routerLink=\\\"/home/register\\\"\\n    >\\n      Create a new Admin\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"../../services/user.service\";\nimport { Router } from \"@angular/router\";\nimport { ToasterService } from \"../../services/toaster.service\";\nimport { UserCellRendererComponent } from \"../cell_renderer/userCellRenderer/cell_renderer.component\";\n\n@Component({\n  selector: \"app-user\",\n  templateUrl: \"./user.component.html\",\n  styleUrls: [\"./user.component.css\"],\n})\nexport class UserComponent implements OnInit {\n  user = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  users = [];\n  categories = [];\n  filtered_users = [];\n  selectedCategory: string;\n  loggedInUser = localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : \"\";\n  columnDefs = [];\n  rowData = [];\n  gridApi = [];\n  gridColumnApi = [];\n  heading = \"\";\n\n  constructor(\n    private _users: UserService,\n    private route: Router,\n    private toaster: ToasterService\n  ) {}\n\n  ngOnInit() {\n    const type = this.loggedInUser.type === \"admin\" ? \"regular\" : \"admin\";\n    this.heading = type === \"admin\" ? \"Admins\" : \"Volunteers\";\n    this._users.listUrlByRole(type).subscribe(\n      (res) => {\n        if (res.data == null) this.toaster.showError(res.message);\n        else {\n          this.users = res.data;\n          this.columnDefs = [\n            {\n              headerName: \"Name\",\n              valueGetter: function (params) {\n                return params.data.fName + \" \" + params.data.lName;\n              },\n              cellStyle: { border: \"1px solid lightgrey\" },\n              sortable: true,\n              filter: true,\n            },\n            {\n              headerName: \"Category\",\n              field: \"category.name\",\n              sortable: true,\n              filter: true,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Role\",\n              field: \"role.name\",\n              sortable: true,\n              filter: true,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n            {\n              headerName: \"Actions\",\n              field: \"action\",\n              cellRendererFramework: UserCellRendererComponent,\n              cellStyle: { border: \"1px solid lightgrey\" },\n            },\n          ];\n          this.rowData = this.users;\n        }\n      },\n      (error) => {\n        this.toaster.showError(error.error.message);\n        if (error.error.statusCode === 403) this.route.navigate([\"login\"]);\n      }\n    );\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    params.api.sizeColumnsToFit();\n  }\n}\n","export const constants = {\n    apiUrl: 'http://ec2-3-19-239-124.us-east-2.compute.amazonaws.com:3001/',\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { constants } from \"../config\";\n\n@Injectable()\nexport class CategoryService {\n  private _createUrl = constants.apiUrl + \"api/category/create\";\n  private _listUrl = constants.apiUrl + \"api/category\";\n  private _updateUrl = constants.apiUrl + \"api/category/update\";\n  private _summaryUrl = constants.apiUrl + \"api/category/summary/\";\n\n  constructor(private _http: HttpClient, private route: Router) {}\n\n  create(data): Observable<any> {\n    return this._http.post<any>(this._createUrl, data);\n  }\n  list(): Observable<any> {\n    return this._http.get<any>(this._listUrl);\n  }\n  update(data): Observable<any> {\n    return this._http.post<any>(this._updateUrl, data);\n  }\n  summary(): Observable<any> {\n    return this._http.get<any>(this._summaryUrl);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { constants } from \"../config\";\n\n@Injectable()\nexport class MedicalRequestService {\n  private _createUrl = constants.apiUrl + \"api/medicalrequest/create\";\n  private _getWithRoleUrl =\n    constants.apiUrl + \"api/medicalrequest/roleassigned/\";\n  private _listUrl = constants.apiUrl + \"api/medicalrequest\";\n  private _uploadUrl = constants.apiUrl + \"api/medicalrequest/upload/\";\n\n  private _updateUrl = constants.apiUrl + \"api/request/update\";\n  private _listByCategoryUrl = constants.apiUrl + \"api/request/category/\";\n  private _interactUrl = constants.apiUrl + \"api/request/interact/\";\n  private _addCommentUrl = constants.apiUrl + \"api/request/addcomment/\";\n  private _summaryUrl = constants.apiUrl + \"api/request/summary/\";\n\n  constructor(private _http: HttpClient, private route: Router) {}\n\n  create(data): Observable<any> {\n    return this._http.post<any>(this._createUrl, data);\n  }\n  listByRole(userid): Observable<any> {\n    return this._http.get<any>(`${this._getWithRoleUrl}${userid}`);\n  }\n  getById(id): Observable<any> {\n    return this._http.get<any>(`${this._listUrl}/${id}`);\n  }\n  upload(data): Observable<any> {\n    return this._http.post<any>(this._uploadUrl, data);\n  }\n\n  list(): Observable<any> {\n    return this._http.get<any>(this._listUrl);\n  }\n  update(data): Observable<any> {\n    return this._http.post<any>(this._updateUrl, data);\n  }\n  getByCategory(category): Observable<any> {\n    return this._http.get<any>(`${this._listByCategoryUrl}${category}`);\n  }\n  interact(id): Observable<any> {\n    return this._http.get<any>(`${this._interactUrl}${id}`);\n  }\n  addComment(data): Observable<any> {\n    return this._http.post<any>(this._addCommentUrl, data);\n  }\n  summary(id): Observable<any> {\n    return this._http.get<any>(`${this._summaryUrl}${id}`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { constants } from \"../config\";\n\n@Injectable()\nexport class RequestService {\n  private _createUrl = constants.apiUrl + \"api/request/create\";\n  private _listUrl = constants.apiUrl + \"api/request\";\n  private _updateUrl = constants.apiUrl + \"api/request/update\";\n  private _listByCategoryUrl = constants.apiUrl + \"api/request/category/\";\n  private _interactUrl = constants.apiUrl + \"api/request/interact/\";\n  private _addCommentUrl = constants.apiUrl + \"api/request/addcomment/\";\n  private _getWithRoleUrl = constants.apiUrl + \"api/request/roleassigned/\";\n  private _summaryUrl = constants.apiUrl + \"api/request/summary/\";\n  private _uploadUrl = constants.apiUrl + \"api/request/upload/\";\n\n  constructor(private _http: HttpClient, private route: Router) {}\n\n  create(data): Observable<any> {\n    return this._http.post<any>(this._createUrl, data);\n  }\n  list(): Observable<any> {\n    return this._http.get<any>(this._listUrl);\n  }\n  getById(id): Observable<any> {\n    return this._http.get<any>(`${this._listUrl}/${id}`);\n  }\n  listByRole(userid): Observable<any> {\n    return this._http.get<any>(`${this._getWithRoleUrl}${userid}`);\n  }\n  update(data): Observable<any> {\n    return this._http.post<any>(this._updateUrl, data);\n  }\n  getByCategory(category): Observable<any> {\n    return this._http.get<any>(`${this._listByCategoryUrl}${category}`);\n  }\n  interact(id): Observable<any> {\n    return this._http.get<any>(`${this._interactUrl}${id}`);\n  }\n  addComment(data): Observable<any> {\n    return this._http.post<any>(this._addCommentUrl, data);\n  }\n  upload(data): Observable<any> {\n    return this._http.post<any>(this._uploadUrl, data);\n  }\n  summary(id): Observable<any> {\n    return this._http.get<any>(`${this._summaryUrl}${id}`);\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { constants } from \"../config\";\n\n@Injectable()\nexport class RolesService {\n  private _createUrl = constants.apiUrl + \"api/roles/create\";\n  private _listUrl = constants.apiUrl + \"api/roles\";\n  private _updateUrl = constants.apiUrl + \"api/roles/update\";\n  private _listByCategoryUrl = constants.apiUrl + \"api/roles/category/\";\n  private _summaryUrl = constants.apiUrl + \"api/roles/summary/\";\n\n  constructor(private _http: HttpClient, private route: Router) {}\n\n  create(data): Observable<any> {\n    return this._http.post<any>(this._createUrl, data);\n  }\n  list(): Observable<any> {\n    return this._http.get<any>(this._listUrl);\n  }\n  update(data): Observable<any> {\n    return this._http.post<any>(this._updateUrl, data);\n  }\n  getByCategory(category): Observable<any> {\n    return this._http.get<any>(`${this._listByCategoryUrl}${category}`);\n  }\n  summary(): Observable<any> {\n    return this._http.get<any>(this._summaryUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable()\nexport class ToasterService {\n  constructor(private toaster: ToastrService) {}\n\n  showError(msg) {\n    this.toaster.error(msg);\n  }\n\n  showSuccess(msg){\n      this.toaster.success(msg);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { constants } from \"../config\";\n\n@Injectable()\nexport class UserService {\n  private _loginUrl = constants.apiUrl + \"api/auth/login\";\n  private _signupUrl = constants.apiUrl + \"api/auth/signup\";\n  private _listUrl = constants.apiUrl + \"api/user\";\n  private _listUrlByRole = constants.apiUrl + \"api/user/role\";\n  private _getassigneeUrl = constants.apiUrl + \"api/user/getassignee\";\n  private _summaryUrl = constants.apiUrl + \"api/user/summary/\";\n  private _getByIdUrl = constants.apiUrl + \"api/user/\";\n  private _updateUserUrl = constants.apiUrl + \"api/user/update\";\n\n  TOKEN_KEY = \"token\";\n\n  constructor(private _http: HttpClient, private route: Router) {}\n\n  get token() {\n    return localStorage.getItem(\"token\");\n  }\n\n  saveTokenUser(token, role, user) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"role\", role);\n    localStorage.setItem(\"user\", user);\n  }\n\n  signup(data): Observable<any> {\n    return this._http.post(this._signupUrl, data);\n  }\n  update(data): Observable<any> {\n    return this._http.post(this._updateUserUrl, data);\n  }\n\n  login(loginData): Observable<any> {\n    return this._http.post<any>(this._loginUrl, loginData);\n  }\n\n  logout() {\n    localStorage.setItem(\"user\", \"\");\n    localStorage.setItem(\"token\", \"\");\n    localStorage.setItem(\"role\", \"\");\n    this.route.navigate([\"/login\"]);\n  }\n\n  list(): Observable<any> {\n    return this._http.get<any>(this._listUrl);\n  }\n\n  listUrlByRole(role): Observable<any> {\n    return this._http.get<any>(`${this._listUrlByRole}/${role}`);\n  }\n\n  getAssignee(query): Observable<any> {\n    return this._http.post<any>(this._getassigneeUrl, query);\n  }\n  summary(type): Observable<any> {\n    return this._http.get<any>(`${this._summaryUrl}${type}`);\n  }\n  getById(id): Observable<any> {\n    return this._http.get<any>(`${this._getByIdUrl}${id}`);\n  }\n}\n","module.exports = \"body {\\n\\tmargin-top: 60px;\\n\\tfont-size: 14px;\\n\\tfont-family: \\\"Helvetica Nueue\\\",Arial,Verdana,sans-serif;\\n\\tbackground-color: #E5E9ED;\\n}\\n.btn:hover,\\n.btn:focus,\\n.btn:active{\\n    outline: 0 !important;\\n}\\n/* entire container, keeps perspective */\\n.card-container {\\n\\t  -webkit-perspective: 800px;\\n     -o-perspective: 800px;\\n        perspective: 800px;\\n        margin-bottom: 30px;\\n}\\n/* flip the pane when hovered */\\n.card-container:not(.manual-flip):hover .card,\\n.card-container.hover.manual-flip .card{\\n\\t-webkit-transform: rotateY( 180deg );\\n    transform: rotateY( 180deg );\\n}\\n.card-container.static:hover .card,\\n.card-container.static.hover .card {\\n\\t-webkit-transform: none;\\n    transform: none;\\n}\\n/* flip speed goes here */\\n.card {\\n  transition: -webkit-transform .5s;\\n  transition: transform .5s;\\n  transition: transform .5s, -webkit-transform .5s;\\n-webkit-transform-style: preserve-3d;\\n        transform-style: preserve-3d;\\n\\tposition: relative;\\n}\\n/* hide back of pane during swap */\\n.front, .back {\\n\\t-webkit-backface-visibility: hidden;\\n        backface-visibility: hidden;\\n\\tposition: absolute;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\tbackground-color: #FFF;\\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.14);\\n}\\n/* front pane, placed above back */\\n.front {\\n\\tz-index: 2;\\n}\\n/* back, initially hidden pane */\\n.back {\\n\\t\\t-webkit-transform: rotateY( 180deg );\\n        transform: rotateY( 180deg );\\n        z-index: 3;\\n}\\n.back .btn-simple{\\n    position: absolute;\\n    left: 0;\\n    bottom: 4px;\\n}\\n/*        Style       */\\n.card{\\n    background: none repeat scroll 0 0 #FFFFFF;\\n    border-radius: 4px;\\n    color: #444444;\\n}\\n.card-container, .front, .back {\\n\\twidth: 100%;\\n\\theight: 420px;\\n\\tborder-radius: 4px;\\n}\\n.card .cover{\\n    height: 105px;\\n    overflow: hidden;\\n    border-radius: 4px 4px 0 0;\\n}\\n.card .cover img{\\n    width: 100%;\\n}\\n.card .user{\\n    border-radius: 50%;\\n    display: block;\\n    height: 120px;\\n    margin: -55px auto 0;\\n    overflow: hidden;\\n    width: 120px;\\n}\\n.card .user img{\\n    background: none repeat scroll 0 0 #FFFFFF;\\n    border: 4px solid #FFFFFF;\\n    width: 100%;\\n}\\n.card .content{\\n    background-color: rgba(0, 0, 0, 0);\\n    box-shadow: none;\\n    padding: 10px 20px 20px;\\n}\\n.card .content .main {\\n    min-height: 160px;\\n}\\n.card .back .content .main {\\n    height: 215px;\\n}\\n.card .name {\\n    font-size: 22px;\\n    line-height: 28px;\\n    margin: 10px 0 0;\\n    text-align: center;\\n    text-transform: capitalize;\\n}\\n.card h5{\\n    margin: 5px 0;\\n    font-weight: 400;\\n    line-height: 20px;\\n}\\n.card .profession{\\n    color: #999999;\\n    text-align: center;\\n    margin-bottom: 20px;\\n}\\n.card .footer {\\n    border-top: 1px solid #EEEEEE;\\n    color: #999999;\\n    margin: 30px 0 0;\\n    padding: 10px 0 0;\\n    text-align: center;\\n}\\n.card .footer .social-links{\\n    font-size: 18px;\\n}\\n.card .footer .social-links a{\\n    margin: 0 7px;\\n}\\n.card .footer .btn-simple{\\n    margin-top: -6px;\\n}\\n.card .header {\\n    padding: 15px 20px;\\n    height: 90px;\\n}\\n.card .motto{\\n    border-bottom: 1px solid #EEEEEE;\\n    color: #999999;\\n    font-size: 14px;\\n    font-weight: 400;\\n    padding-bottom: 10px;\\n    text-align: center;\\n}\\n.card .stats-container{\\n\\twidth: 100%;\\n\\tmargin-top: 50px;\\n}\\n.card .stats{\\n\\tdisplay: block;\\n\\tfloat: left;\\n\\twidth: 33.333333%;\\n\\ttext-align: center;\\n}\\n.card .stats:first-child{\\n\\tborder-right: 1px solid #EEEEEE;\\n}\\n.card .stats:last-child{\\n\\tborder-left: 1px solid #EEEEEE;\\n}\\n.card .stats h4{\\n\\tfont-weight: 300;\\n\\tmargin-bottom: 5px;\\n}\\n.card .stats p{\\n\\tcolor: #777777;\\n}\\n/*      Just for presentation        */\\n.title{\\n    color: #506A85;\\n    text-align: center;\\n    font-weight: 300;\\n    font-size: 44px;\\n    margin-bottom: 90px;\\n    line-height: 90%;\\n}\\n.title small{\\n    font-size: 17px;\\n    color: #999;\\n    text-transform: uppercase;\\n    margin: 0;\\n}\\n.space-30{\\n\\theight: 30px;\\n\\tdisplay: block;\\n}\\n.space-50{\\n    height: 50px;\\n    display: block;\\n}\\n.space-200{\\n    height: 200px;\\n    display: block;\\n}\\n.white-board{\\n    background-color: #FFFFFF;\\n    min-height: 200px;\\n    padding: 60px 60px 20px;\\n}\\n.ct-heart{\\n    color: #F74933;\\n}\\npre.prettyprint{\\n    background-color: #ffffff;\\n    border: 1px solid #999;\\n    margin-top: 20px;\\n    padding: 20px;\\n    text-align: left;\\n}\\n.atv, .str{\\n    color: #05AE0E;\\n}\\n.tag, .pln, .kwd{\\n     color: #3472F7;\\n}\\n.atn{\\n  color: #2C93FF;\\n}\\n.pln{\\n   color: #333;\\n}\\n.com{\\n    color: #999;\\n}\\n.btn-simple{\\n    opacity: .8;\\n    color: #666666;\\n    background-color: transparent;\\n}\\n.btn-simple:hover,\\n.btn-simple:focus{\\n    background-color: transparent;\\n    box-shadow: none;\\n    opacity: 1;\\n}\\n.btn-simple i{\\n    font-size: 16px;\\n}\\n.navbar-brand-logo{\\n    padding: 0;\\n}\\n.navbar-brand-logo .logo{\\n    border: 1px solid #333333;\\n    border-radius: 50%;\\n    float: left;\\n    overflow: hidden;\\n    width: 60px;\\n}\\n.navbar .navbar-brand-logo .brand{\\n    color: #FFFFFF;\\n    float: left;\\n    font-size: 18px;\\n    font-weight: 400;\\n    line-height: 20px;\\n    margin-left: 10px;\\n    margin-top: 10px;\\n    width: 60px;\\n}\\n.navbar-default .navbar-brand-logo .brand{\\n    color: #555;\\n}\\n/*       Fix bug for IE      */\\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n    .front, .back{\\n        -webkit-backface-visibility: visible;\\n                backface-visibility: visible;\\n    }\\n\\n    .back {\\n        visibility: hidden;\\n        -ms-transition: all 0.2s cubic-bezier(.92,.01,.83,.67);\\n    }\\n    .front{\\n        z-index: 4;\\n    }\\n    .card-container:not(.manual-flip):hover .back,\\n    .card-container.manual-flip.hover .back{\\n        z-index: 5;\\n        visibility: visible;\\n    }\\n}\\n\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}